
HC-05_Interface_STM32_InBuiltLedControl.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000198  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         0000142c  080001a0  080001a0  000101a0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       000000b8  080015cc  080015cc  000115cc  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  08001684  08001684  00020064  2**0
                  CONTENTS
  4 .ARM          00000000  08001684  08001684  00020064  2**0
                  CONTENTS
  5 .preinit_array 00000000  08001684  08001684  00020064  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08001684  08001684  00011684  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08001688  08001688  00011688  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000064  20000000  0800168c  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          00000030  20000064  080016f0  00020064  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  20000094  080016f0  00020094  2**0
                  ALLOC
 11 .ARM.attributes 00000030  00000000  00000000  00020064  2**0
                  CONTENTS, READONLY
 12 .debug_info   00000d06  00000000  00000000  00020094  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 00000468  00000000  00000000  00020d9a  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 00000140  00000000  00000000  00021208  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_ranges 00000108  00000000  00000000  00021348  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  00001d8b  00000000  00000000  00021450  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   000014b2  00000000  00000000  000231db  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    0000b607  00000000  00000000  0002468d  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000050  00000000  00000000  0002fc94  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00000c10  00000000  00000000  0002fce4  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001a0 <__do_global_dtors_aux>:
 80001a0:	b510      	push	{r4, lr}
 80001a2:	4c05      	ldr	r4, [pc, #20]	; (80001b8 <__do_global_dtors_aux+0x18>)
 80001a4:	7823      	ldrb	r3, [r4, #0]
 80001a6:	b933      	cbnz	r3, 80001b6 <__do_global_dtors_aux+0x16>
 80001a8:	4b04      	ldr	r3, [pc, #16]	; (80001bc <__do_global_dtors_aux+0x1c>)
 80001aa:	b113      	cbz	r3, 80001b2 <__do_global_dtors_aux+0x12>
 80001ac:	4804      	ldr	r0, [pc, #16]	; (80001c0 <__do_global_dtors_aux+0x20>)
 80001ae:	f3af 8000 	nop.w
 80001b2:	2301      	movs	r3, #1
 80001b4:	7023      	strb	r3, [r4, #0]
 80001b6:	bd10      	pop	{r4, pc}
 80001b8:	20000064 	.word	0x20000064
 80001bc:	00000000 	.word	0x00000000
 80001c0:	080015b4 	.word	0x080015b4

080001c4 <frame_dummy>:
 80001c4:	b508      	push	{r3, lr}
 80001c6:	4b03      	ldr	r3, [pc, #12]	; (80001d4 <frame_dummy+0x10>)
 80001c8:	b11b      	cbz	r3, 80001d2 <frame_dummy+0xe>
 80001ca:	4903      	ldr	r1, [pc, #12]	; (80001d8 <frame_dummy+0x14>)
 80001cc:	4803      	ldr	r0, [pc, #12]	; (80001dc <frame_dummy+0x18>)
 80001ce:	f3af 8000 	nop.w
 80001d2:	bd08      	pop	{r3, pc}
 80001d4:	00000000 	.word	0x00000000
 80001d8:	20000068 	.word	0x20000068
 80001dc:	080015b4 	.word	0x080015b4

080001e0 <memchr>:
 80001e0:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 80001e4:	2a10      	cmp	r2, #16
 80001e6:	db2b      	blt.n	8000240 <memchr+0x60>
 80001e8:	f010 0f07 	tst.w	r0, #7
 80001ec:	d008      	beq.n	8000200 <memchr+0x20>
 80001ee:	f810 3b01 	ldrb.w	r3, [r0], #1
 80001f2:	3a01      	subs	r2, #1
 80001f4:	428b      	cmp	r3, r1
 80001f6:	d02d      	beq.n	8000254 <memchr+0x74>
 80001f8:	f010 0f07 	tst.w	r0, #7
 80001fc:	b342      	cbz	r2, 8000250 <memchr+0x70>
 80001fe:	d1f6      	bne.n	80001ee <memchr+0xe>
 8000200:	b4f0      	push	{r4, r5, r6, r7}
 8000202:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8000206:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800020a:	f022 0407 	bic.w	r4, r2, #7
 800020e:	f07f 0700 	mvns.w	r7, #0
 8000212:	2300      	movs	r3, #0
 8000214:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000218:	3c08      	subs	r4, #8
 800021a:	ea85 0501 	eor.w	r5, r5, r1
 800021e:	ea86 0601 	eor.w	r6, r6, r1
 8000222:	fa85 f547 	uadd8	r5, r5, r7
 8000226:	faa3 f587 	sel	r5, r3, r7
 800022a:	fa86 f647 	uadd8	r6, r6, r7
 800022e:	faa5 f687 	sel	r6, r5, r7
 8000232:	b98e      	cbnz	r6, 8000258 <memchr+0x78>
 8000234:	d1ee      	bne.n	8000214 <memchr+0x34>
 8000236:	bcf0      	pop	{r4, r5, r6, r7}
 8000238:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 800023c:	f002 0207 	and.w	r2, r2, #7
 8000240:	b132      	cbz	r2, 8000250 <memchr+0x70>
 8000242:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000246:	3a01      	subs	r2, #1
 8000248:	ea83 0301 	eor.w	r3, r3, r1
 800024c:	b113      	cbz	r3, 8000254 <memchr+0x74>
 800024e:	d1f8      	bne.n	8000242 <memchr+0x62>
 8000250:	2000      	movs	r0, #0
 8000252:	4770      	bx	lr
 8000254:	3801      	subs	r0, #1
 8000256:	4770      	bx	lr
 8000258:	2d00      	cmp	r5, #0
 800025a:	bf06      	itte	eq
 800025c:	4635      	moveq	r5, r6
 800025e:	3803      	subeq	r0, #3
 8000260:	3807      	subne	r0, #7
 8000262:	f015 0f01 	tst.w	r5, #1
 8000266:	d107      	bne.n	8000278 <memchr+0x98>
 8000268:	3001      	adds	r0, #1
 800026a:	f415 7f80 	tst.w	r5, #256	; 0x100
 800026e:	bf02      	ittt	eq
 8000270:	3001      	addeq	r0, #1
 8000272:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
 8000276:	3001      	addeq	r0, #1
 8000278:	bcf0      	pop	{r4, r5, r6, r7}
 800027a:	3801      	subs	r0, #1
 800027c:	4770      	bx	lr
 800027e:	bf00      	nop

08000280 <__io_putchar>:

static void uart1_set_baudrate(USART_RegDef_t *USARTx,uint32_t PeriphClk,uint32_t Baudrate);
//static uint16_t compute_uart_bd(uint32_t PeriphClk,uint32_t Baudrate);

int __io_putchar(char ch)
{
 8000280:	b580      	push	{r7, lr}
 8000282:	b082      	sub	sp, #8
 8000284:	af00      	add	r7, sp, #0
 8000286:	4603      	mov	r3, r0
 8000288:	71fb      	strb	r3, [r7, #7]
	uart1_write(ch);
 800028a:	79fb      	ldrb	r3, [r7, #7]
 800028c:	4618      	mov	r0, r3
 800028e:	f000 f8d7 	bl	8000440 <uart1_write>
	return ch;
 8000292:	79fb      	ldrb	r3, [r7, #7]
}
 8000294:	4618      	mov	r0, r3
 8000296:	3708      	adds	r7, #8
 8000298:	46bd      	mov	sp, r7
 800029a:	bd80      	pop	{r7, pc}

0800029c <main>:
{
	for(uint32_t i=0; i<300000;i++);
}

int main(void)
{
 800029c:	b580      	push	{r7, lr}
 800029e:	b082      	sub	sp, #8
 80002a0:	af00      	add	r7, sp, #0
	uint32_t temp=0;
 80002a2:	2300      	movs	r3, #0
 80002a4:	607b      	str	r3, [r7, #4]
	char key;

	//LED - PA5
	RCC->AHB1ENR |= GPIOAEN;
 80002a6:	4b20      	ldr	r3, [pc, #128]	; (8000328 <main+0x8c>)
 80002a8:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80002aa:	4a1f      	ldr	r2, [pc, #124]	; (8000328 <main+0x8c>)
 80002ac:	f043 0301 	orr.w	r3, r3, #1
 80002b0:	6313      	str	r3, [r2, #48]	; 0x30

	//clear and set MODER for LED
	temp = (0x1 << (2*LED_PIN_NUMBER));  //01: General purpose output mode
 80002b2:	f44f 6380 	mov.w	r3, #1024	; 0x400
 80002b6:	607b      	str	r3, [r7, #4]

	GPIOA->MODER &= ~(0x3 << (2*LED_PIN_NUMBER) ) ; //Clear - 0.X=0 (3=>11) //create a mask value
 80002b8:	4b1c      	ldr	r3, [pc, #112]	; (800032c <main+0x90>)
 80002ba:	681b      	ldr	r3, [r3, #0]
 80002bc:	4a1b      	ldr	r2, [pc, #108]	; (800032c <main+0x90>)
 80002be:	f423 6340 	bic.w	r3, r3, #3072	; 0xc00
 80002c2:	6013      	str	r3, [r2, #0]
	GPIOA->MODER |=temp; //Set
 80002c4:	4b19      	ldr	r3, [pc, #100]	; (800032c <main+0x90>)
 80002c6:	681a      	ldr	r2, [r3, #0]
 80002c8:	4918      	ldr	r1, [pc, #96]	; (800032c <main+0x90>)
 80002ca:	687b      	ldr	r3, [r7, #4]
 80002cc:	4313      	orrs	r3, r2
 80002ce:	600b      	str	r3, [r1, #0]

	uart1_Bluetooth_init();
 80002d0:	f000 f832 	bl	8000338 <uart1_Bluetooth_init>

	while(1)
	{
		uart1_write('A');
 80002d4:	2041      	movs	r0, #65	; 0x41
 80002d6:	f000 f8b3 	bl	8000440 <uart1_write>

		key=uart1_read();
 80002da:	f000 f89d 	bl	8000418 <uart1_read>
 80002de:	4603      	mov	r3, r0
 80002e0:	70fb      	strb	r3, [r7, #3]
		//printf("Value = ",key);

		if (key=='O')
 80002e2:	78fb      	ldrb	r3, [r7, #3]
 80002e4:	2b4f      	cmp	r3, #79	; 0x4f
 80002e6:	d10d      	bne.n	8000304 <main+0x68>
		{
			GPIOA->ODR |=  (1<<LED_PIN_NUMBER); //LED ON
 80002e8:	4b10      	ldr	r3, [pc, #64]	; (800032c <main+0x90>)
 80002ea:	695b      	ldr	r3, [r3, #20]
 80002ec:	4a0f      	ldr	r2, [pc, #60]	; (800032c <main+0x90>)
 80002ee:	f043 0320 	orr.w	r3, r3, #32
 80002f2:	6153      	str	r3, [r2, #20]
			uart1_write(key);
 80002f4:	78fb      	ldrb	r3, [r7, #3]
 80002f6:	4618      	mov	r0, r3
 80002f8:	f000 f8a2 	bl	8000440 <uart1_write>
			printf("LED is ON \n \r");
 80002fc:	480c      	ldr	r0, [pc, #48]	; (8000330 <main+0x94>)
 80002fe:	f000 f9cb 	bl	8000698 <iprintf>
 8000302:	e7e7      	b.n	80002d4 <main+0x38>
		}
		else if (key=='F')
 8000304:	78fb      	ldrb	r3, [r7, #3]
 8000306:	2b46      	cmp	r3, #70	; 0x46
 8000308:	d1e4      	bne.n	80002d4 <main+0x38>
		{
			GPIOA->ODR &=~  (1<<LED_PIN_NUMBER); //LED OFF
 800030a:	4b08      	ldr	r3, [pc, #32]	; (800032c <main+0x90>)
 800030c:	695b      	ldr	r3, [r3, #20]
 800030e:	4a07      	ldr	r2, [pc, #28]	; (800032c <main+0x90>)
 8000310:	f023 0320 	bic.w	r3, r3, #32
 8000314:	6153      	str	r3, [r2, #20]
			uart1_write(key);
 8000316:	78fb      	ldrb	r3, [r7, #3]
 8000318:	4618      	mov	r0, r3
 800031a:	f000 f891 	bl	8000440 <uart1_write>
			printf("LED is OFF \n \r");
 800031e:	4805      	ldr	r0, [pc, #20]	; (8000334 <main+0x98>)
 8000320:	f000 f9ba 	bl	8000698 <iprintf>
		uart1_write('A');
 8000324:	e7d6      	b.n	80002d4 <main+0x38>
 8000326:	bf00      	nop
 8000328:	40023800 	.word	0x40023800
 800032c:	40020000 	.word	0x40020000
 8000330:	080015cc 	.word	0x080015cc
 8000334:	080015dc 	.word	0x080015dc

08000338 <uart1_Bluetooth_init>:
	}

}

void uart1_Bluetooth_init()
{
 8000338:	b580      	push	{r7, lr}
 800033a:	af00      	add	r7, sp, #0
	RCC->AHB1ENR |= GPIOBEN;
 800033c:	4b32      	ldr	r3, [pc, #200]	; (8000408 <uart1_Bluetooth_init+0xd0>)
 800033e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000340:	4a31      	ldr	r2, [pc, #196]	; (8000408 <uart1_Bluetooth_init+0xd0>)
 8000342:	f043 0302 	orr.w	r3, r3, #2
 8000346:	6313      	str	r3, [r2, #48]	; 0x30

		// UART1 - PB6  -> TRANSMIT - Alternate function mode(10)
		GPIOB->MODER &=~(1U <<12);
 8000348:	4b30      	ldr	r3, [pc, #192]	; (800040c <uart1_Bluetooth_init+0xd4>)
 800034a:	681b      	ldr	r3, [r3, #0]
 800034c:	4a2f      	ldr	r2, [pc, #188]	; (800040c <uart1_Bluetooth_init+0xd4>)
 800034e:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 8000352:	6013      	str	r3, [r2, #0]
		GPIOB->MODER |= (1U <<13);
 8000354:	4b2d      	ldr	r3, [pc, #180]	; (800040c <uart1_Bluetooth_init+0xd4>)
 8000356:	681b      	ldr	r3, [r3, #0]
 8000358:	4a2c      	ldr	r2, [pc, #176]	; (800040c <uart1_Bluetooth_init+0xd4>)
 800035a:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
 800035e:	6013      	str	r3, [r2, #0]
		// UART1 - PB7  -> RECEIVE - Alternate function mode(10)
		GPIOB->MODER &=~(1U <<14);
 8000360:	4b2a      	ldr	r3, [pc, #168]	; (800040c <uart1_Bluetooth_init+0xd4>)
 8000362:	681b      	ldr	r3, [r3, #0]
 8000364:	4a29      	ldr	r2, [pc, #164]	; (800040c <uart1_Bluetooth_init+0xd4>)
 8000366:	f423 4380 	bic.w	r3, r3, #16384	; 0x4000
 800036a:	6013      	str	r3, [r2, #0]
		GPIOB->MODER |= (1U <<15);
 800036c:	4b27      	ldr	r3, [pc, #156]	; (800040c <uart1_Bluetooth_init+0xd4>)
 800036e:	681b      	ldr	r3, [r3, #0]
 8000370:	4a26      	ldr	r2, [pc, #152]	; (800040c <uart1_Bluetooth_init+0xd4>)
 8000372:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 8000376:	6013      	str	r3, [r2, #0]

	    ///PB6 - USART1_ TX -> ALTERNATE - AF7(0111)
		GPIOB->AFR[0] |=(1U<<24);
 8000378:	4b24      	ldr	r3, [pc, #144]	; (800040c <uart1_Bluetooth_init+0xd4>)
 800037a:	6a1b      	ldr	r3, [r3, #32]
 800037c:	4a23      	ldr	r2, [pc, #140]	; (800040c <uart1_Bluetooth_init+0xd4>)
 800037e:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
 8000382:	6213      	str	r3, [r2, #32]
		GPIOB->AFR[0] |=(1U<<25);
 8000384:	4b21      	ldr	r3, [pc, #132]	; (800040c <uart1_Bluetooth_init+0xd4>)
 8000386:	6a1b      	ldr	r3, [r3, #32]
 8000388:	4a20      	ldr	r2, [pc, #128]	; (800040c <uart1_Bluetooth_init+0xd4>)
 800038a:	f043 7300 	orr.w	r3, r3, #33554432	; 0x2000000
 800038e:	6213      	str	r3, [r2, #32]
		GPIOB->AFR[0] |=(1U<<26);
 8000390:	4b1e      	ldr	r3, [pc, #120]	; (800040c <uart1_Bluetooth_init+0xd4>)
 8000392:	6a1b      	ldr	r3, [r3, #32]
 8000394:	4a1d      	ldr	r2, [pc, #116]	; (800040c <uart1_Bluetooth_init+0xd4>)
 8000396:	f043 6380 	orr.w	r3, r3, #67108864	; 0x4000000
 800039a:	6213      	str	r3, [r2, #32]
		GPIOB->AFR[0] &=~(1U<<27);
 800039c:	4b1b      	ldr	r3, [pc, #108]	; (800040c <uart1_Bluetooth_init+0xd4>)
 800039e:	6a1b      	ldr	r3, [r3, #32]
 80003a0:	4a1a      	ldr	r2, [pc, #104]	; (800040c <uart1_Bluetooth_init+0xd4>)
 80003a2:	f023 6300 	bic.w	r3, r3, #134217728	; 0x8000000
 80003a6:	6213      	str	r3, [r2, #32]

	    ///PB7 - USART1_ RX -> ALTERNATE - AF7(0111)
		GPIOB->AFR[0] |=(1U<<28);
 80003a8:	4b18      	ldr	r3, [pc, #96]	; (800040c <uart1_Bluetooth_init+0xd4>)
 80003aa:	6a1b      	ldr	r3, [r3, #32]
 80003ac:	4a17      	ldr	r2, [pc, #92]	; (800040c <uart1_Bluetooth_init+0xd4>)
 80003ae:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 80003b2:	6213      	str	r3, [r2, #32]
		GPIOB->AFR[0] |=(1U<<29);
 80003b4:	4b15      	ldr	r3, [pc, #84]	; (800040c <uart1_Bluetooth_init+0xd4>)
 80003b6:	6a1b      	ldr	r3, [r3, #32]
 80003b8:	4a14      	ldr	r2, [pc, #80]	; (800040c <uart1_Bluetooth_init+0xd4>)
 80003ba:	f043 5300 	orr.w	r3, r3, #536870912	; 0x20000000
 80003be:	6213      	str	r3, [r2, #32]
		GPIOB->AFR[0] |=(1U<<30);
 80003c0:	4b12      	ldr	r3, [pc, #72]	; (800040c <uart1_Bluetooth_init+0xd4>)
 80003c2:	6a1b      	ldr	r3, [r3, #32]
 80003c4:	4a11      	ldr	r2, [pc, #68]	; (800040c <uart1_Bluetooth_init+0xd4>)
 80003c6:	f043 4380 	orr.w	r3, r3, #1073741824	; 0x40000000
 80003ca:	6213      	str	r3, [r2, #32]
		GPIOB->AFR[0] &=~(1U<<31);
 80003cc:	4b0f      	ldr	r3, [pc, #60]	; (800040c <uart1_Bluetooth_init+0xd4>)
 80003ce:	6a1b      	ldr	r3, [r3, #32]
 80003d0:	4a0e      	ldr	r2, [pc, #56]	; (800040c <uart1_Bluetooth_init+0xd4>)
 80003d2:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 80003d6:	6213      	str	r3, [r2, #32]

	RCC->APB2ENR |= UART1EN;
 80003d8:	4b0b      	ldr	r3, [pc, #44]	; (8000408 <uart1_Bluetooth_init+0xd0>)
 80003da:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80003dc:	4a0a      	ldr	r2, [pc, #40]	; (8000408 <uart1_Bluetooth_init+0xd0>)
 80003de:	f043 0310 	orr.w	r3, r3, #16
 80003e2:	6453      	str	r3, [r2, #68]	; 0x44

		uart1_set_baudrate(USART1,APB2_CLK,UART_BAUDRATE); //139
 80003e4:	f44f 5216 	mov.w	r2, #9600	; 0x2580
 80003e8:	4909      	ldr	r1, [pc, #36]	; (8000410 <uart1_Bluetooth_init+0xd8>)
 80003ea:	480a      	ldr	r0, [pc, #40]	; (8000414 <uart1_Bluetooth_init+0xdc>)
 80003ec:	f000 f840 	bl	8000470 <uart1_set_baudrate>
		//139 - 1000 1011 => DIV_Mantissa = 8, DIV_Fraction = B(11)
		//When USART_CR1_OVER8=1, the DIV_Fraction bit is not considered and must be kept cleared.

		//TE=1: Transmitter is enabled, RE=1:Receiver is enabled and begins searching for a start bit
		USART1->CR1 = CR1_TE |CR1_RE;
 80003f0:	4b08      	ldr	r3, [pc, #32]	; (8000414 <uart1_Bluetooth_init+0xdc>)
 80003f2:	220c      	movs	r2, #12
 80003f4:	60da      	str	r2, [r3, #12]
		USART1->CR1 |= CR1_UE; //UE=1: USART enabled
 80003f6:	4b07      	ldr	r3, [pc, #28]	; (8000414 <uart1_Bluetooth_init+0xdc>)
 80003f8:	68db      	ldr	r3, [r3, #12]
 80003fa:	4a06      	ldr	r2, [pc, #24]	; (8000414 <uart1_Bluetooth_init+0xdc>)
 80003fc:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
 8000400:	60d3      	str	r3, [r2, #12]
		//USART1->CR1 &= CR1_OVER8;	//0: oversampling by 16
		//USART1->CR1 &= CR1_M_WordLength; 	//0: 1 Start bit, 8 Data bits, n Stop bit

		//USART1->CR2 &= CR2_STOP13; //00: 1 Stop bit
		//USART1->CR2 &= CR2_STOP12;
}
 8000402:	bf00      	nop
 8000404:	bd80      	pop	{r7, pc}
 8000406:	bf00      	nop
 8000408:	40023800 	.word	0x40023800
 800040c:	40020400 	.word	0x40020400
 8000410:	00f42400 	.word	0x00f42400
 8000414:	40011000 	.word	0x40011000

08000418 <uart1_read>:

char uart1_read()
{
 8000418:	b480      	push	{r7}
 800041a:	af00      	add	r7, sp, #0
	//RXNE: Read data register not empty - RXNE=1: Received data is ready to be read
	//the content of the Receive shift register has been transferred to the RDR(Receive Data Register) - pg 968
	//get the "received data" from DR Register

	//make sure the data register is not empty
	while(!(USART1->SR  & SR_RXNE)){}
 800041c:	bf00      	nop
 800041e:	4b07      	ldr	r3, [pc, #28]	; (800043c <uart1_read+0x24>)
 8000420:	681b      	ldr	r3, [r3, #0]
 8000422:	f003 0320 	and.w	r3, r3, #32
 8000426:	2b00      	cmp	r3, #0
 8000428:	d0f9      	beq.n	800041e <uart1_read+0x6>

	//Read from Receive data register(RDR)
	return USART1->DR;
 800042a:	4b04      	ldr	r3, [pc, #16]	; (800043c <uart1_read+0x24>)
 800042c:	685b      	ldr	r3, [r3, #4]
 800042e:	b2db      	uxtb	r3, r3
}
 8000430:	4618      	mov	r0, r3
 8000432:	46bd      	mov	sp, r7
 8000434:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000438:	4770      	bx	lr
 800043a:	bf00      	nop
 800043c:	40011000 	.word	0x40011000

08000440 <uart1_write>:
{
	printf("Data Received \n");
}*/

void uart1_write(char ch)
{
 8000440:	b480      	push	{r7}
 8000442:	b083      	sub	sp, #12
 8000444:	af00      	add	r7, sp, #0
 8000446:	4603      	mov	r3, r0
 8000448:	71fb      	strb	r3, [r7, #7]
	//TXE: Transmit data register empty - TXE=1: Data is transferred to the shift register
	//Content of the TDR(Transmit Data Register)register has been transferred into the Transmit shift register - pg 968
	//so keep the "data to transmit" in DR Register

	//Make sure the transmit data register(TDR) is empty
	while(!(USART1->SR  & SR_TXE)){}
 800044a:	bf00      	nop
 800044c:	4b07      	ldr	r3, [pc, #28]	; (800046c <uart1_write+0x2c>)
 800044e:	681b      	ldr	r3, [r3, #0]
 8000450:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8000454:	2b00      	cmp	r3, #0
 8000456:	d0f9      	beq.n	800044c <uart1_write+0xc>

	//write to transmit data register(TDR)
	USART1->DR =(ch & 0xFF) ; //1.X=X
 8000458:	4a04      	ldr	r2, [pc, #16]	; (800046c <uart1_write+0x2c>)
 800045a:	79fb      	ldrb	r3, [r7, #7]
 800045c:	6053      	str	r3, [r2, #4]
}
 800045e:	bf00      	nop
 8000460:	370c      	adds	r7, #12
 8000462:	46bd      	mov	sp, r7
 8000464:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000468:	4770      	bx	lr
 800046a:	bf00      	nop
 800046c:	40011000 	.word	0x40011000

08000470 <uart1_set_baudrate>:

static void uart1_set_baudrate(USART_RegDef_t *USARTx,uint32_t PeriphClk,uint32_t Baudrate)
{
 8000470:	b480      	push	{r7}
 8000472:	b085      	sub	sp, #20
 8000474:	af00      	add	r7, sp, #0
 8000476:	60f8      	str	r0, [r7, #12]
 8000478:	60b9      	str	r1, [r7, #8]
 800047a:	607a      	str	r2, [r7, #4]
	USARTx->BRR = ((PeriphClk+(Baudrate/2U))/Baudrate);
 800047c:	687b      	ldr	r3, [r7, #4]
 800047e:	085a      	lsrs	r2, r3, #1
 8000480:	68bb      	ldr	r3, [r7, #8]
 8000482:	441a      	add	r2, r3
 8000484:	687b      	ldr	r3, [r7, #4]
 8000486:	fbb2 f2f3 	udiv	r2, r2, r3
 800048a:	68fb      	ldr	r3, [r7, #12]
 800048c:	609a      	str	r2, [r3, #8]
}
 800048e:	bf00      	nop
 8000490:	3714      	adds	r7, #20
 8000492:	46bd      	mov	sp, r7
 8000494:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000498:	4770      	bx	lr

0800049a <_read>:
  _kill(status, -1);
  while (1) {}    /* Make sure we hang here */
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 800049a:	b580      	push	{r7, lr}
 800049c:	b086      	sub	sp, #24
 800049e:	af00      	add	r7, sp, #0
 80004a0:	60f8      	str	r0, [r7, #12]
 80004a2:	60b9      	str	r1, [r7, #8]
 80004a4:	607a      	str	r2, [r7, #4]
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 80004a6:	2300      	movs	r3, #0
 80004a8:	617b      	str	r3, [r7, #20]
 80004aa:	e00a      	b.n	80004c2 <_read+0x28>
  {
    *ptr++ = __io_getchar();
 80004ac:	f3af 8000 	nop.w
 80004b0:	4601      	mov	r1, r0
 80004b2:	68bb      	ldr	r3, [r7, #8]
 80004b4:	1c5a      	adds	r2, r3, #1
 80004b6:	60ba      	str	r2, [r7, #8]
 80004b8:	b2ca      	uxtb	r2, r1
 80004ba:	701a      	strb	r2, [r3, #0]
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 80004bc:	697b      	ldr	r3, [r7, #20]
 80004be:	3301      	adds	r3, #1
 80004c0:	617b      	str	r3, [r7, #20]
 80004c2:	697a      	ldr	r2, [r7, #20]
 80004c4:	687b      	ldr	r3, [r7, #4]
 80004c6:	429a      	cmp	r2, r3
 80004c8:	dbf0      	blt.n	80004ac <_read+0x12>
  }

  return len;
 80004ca:	687b      	ldr	r3, [r7, #4]
}
 80004cc:	4618      	mov	r0, r3
 80004ce:	3718      	adds	r7, #24
 80004d0:	46bd      	mov	sp, r7
 80004d2:	bd80      	pop	{r7, pc}

080004d4 <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 80004d4:	b580      	push	{r7, lr}
 80004d6:	b086      	sub	sp, #24
 80004d8:	af00      	add	r7, sp, #0
 80004da:	60f8      	str	r0, [r7, #12]
 80004dc:	60b9      	str	r1, [r7, #8]
 80004de:	607a      	str	r2, [r7, #4]
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 80004e0:	2300      	movs	r3, #0
 80004e2:	617b      	str	r3, [r7, #20]
 80004e4:	e009      	b.n	80004fa <_write+0x26>
  {
    __io_putchar(*ptr++);
 80004e6:	68bb      	ldr	r3, [r7, #8]
 80004e8:	1c5a      	adds	r2, r3, #1
 80004ea:	60ba      	str	r2, [r7, #8]
 80004ec:	781b      	ldrb	r3, [r3, #0]
 80004ee:	4618      	mov	r0, r3
 80004f0:	f7ff fec6 	bl	8000280 <__io_putchar>
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 80004f4:	697b      	ldr	r3, [r7, #20]
 80004f6:	3301      	adds	r3, #1
 80004f8:	617b      	str	r3, [r7, #20]
 80004fa:	697a      	ldr	r2, [r7, #20]
 80004fc:	687b      	ldr	r3, [r7, #4]
 80004fe:	429a      	cmp	r2, r3
 8000500:	dbf1      	blt.n	80004e6 <_write+0x12>
  }
  return len;
 8000502:	687b      	ldr	r3, [r7, #4]
}
 8000504:	4618      	mov	r0, r3
 8000506:	3718      	adds	r7, #24
 8000508:	46bd      	mov	sp, r7
 800050a:	bd80      	pop	{r7, pc}

0800050c <_close>:

int _close(int file)
{
 800050c:	b480      	push	{r7}
 800050e:	b083      	sub	sp, #12
 8000510:	af00      	add	r7, sp, #0
 8000512:	6078      	str	r0, [r7, #4]
  (void)file;
  return -1;
 8000514:	f04f 33ff 	mov.w	r3, #4294967295
}
 8000518:	4618      	mov	r0, r3
 800051a:	370c      	adds	r7, #12
 800051c:	46bd      	mov	sp, r7
 800051e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000522:	4770      	bx	lr

08000524 <_fstat>:


int _fstat(int file, struct stat *st)
{
 8000524:	b480      	push	{r7}
 8000526:	b083      	sub	sp, #12
 8000528:	af00      	add	r7, sp, #0
 800052a:	6078      	str	r0, [r7, #4]
 800052c:	6039      	str	r1, [r7, #0]
  (void)file;
  st->st_mode = S_IFCHR;
 800052e:	683b      	ldr	r3, [r7, #0]
 8000530:	f44f 5200 	mov.w	r2, #8192	; 0x2000
 8000534:	605a      	str	r2, [r3, #4]
  return 0;
 8000536:	2300      	movs	r3, #0
}
 8000538:	4618      	mov	r0, r3
 800053a:	370c      	adds	r7, #12
 800053c:	46bd      	mov	sp, r7
 800053e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000542:	4770      	bx	lr

08000544 <_isatty>:

int _isatty(int file)
{
 8000544:	b480      	push	{r7}
 8000546:	b083      	sub	sp, #12
 8000548:	af00      	add	r7, sp, #0
 800054a:	6078      	str	r0, [r7, #4]
  (void)file;
  return 1;
 800054c:	2301      	movs	r3, #1
}
 800054e:	4618      	mov	r0, r3
 8000550:	370c      	adds	r7, #12
 8000552:	46bd      	mov	sp, r7
 8000554:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000558:	4770      	bx	lr

0800055a <_lseek>:

int _lseek(int file, int ptr, int dir)
{
 800055a:	b480      	push	{r7}
 800055c:	b085      	sub	sp, #20
 800055e:	af00      	add	r7, sp, #0
 8000560:	60f8      	str	r0, [r7, #12]
 8000562:	60b9      	str	r1, [r7, #8]
 8000564:	607a      	str	r2, [r7, #4]
  (void)file;
  (void)ptr;
  (void)dir;
  return 0;
 8000566:	2300      	movs	r3, #0
}
 8000568:	4618      	mov	r0, r3
 800056a:	3714      	adds	r7, #20
 800056c:	46bd      	mov	sp, r7
 800056e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000572:	4770      	bx	lr

08000574 <_sbrk>:
 *
 * @param incr Memory size
 * @return Pointer to allocated memory
 */
void *_sbrk(ptrdiff_t incr)
{
 8000574:	b580      	push	{r7, lr}
 8000576:	b086      	sub	sp, #24
 8000578:	af00      	add	r7, sp, #0
 800057a:	6078      	str	r0, [r7, #4]
  extern uint8_t _end; /* Symbol defined in the linker script */
  extern uint8_t _estack; /* Symbol defined in the linker script */
  extern uint32_t _Min_Stack_Size; /* Symbol defined in the linker script */
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
 800057c:	4a14      	ldr	r2, [pc, #80]	; (80005d0 <_sbrk+0x5c>)
 800057e:	4b15      	ldr	r3, [pc, #84]	; (80005d4 <_sbrk+0x60>)
 8000580:	1ad3      	subs	r3, r2, r3
 8000582:	617b      	str	r3, [r7, #20]
  const uint8_t *max_heap = (uint8_t *)stack_limit;
 8000584:	697b      	ldr	r3, [r7, #20]
 8000586:	613b      	str	r3, [r7, #16]
  uint8_t *prev_heap_end;

  /* Initialize heap end at first call */
  if (NULL == __sbrk_heap_end)
 8000588:	4b13      	ldr	r3, [pc, #76]	; (80005d8 <_sbrk+0x64>)
 800058a:	681b      	ldr	r3, [r3, #0]
 800058c:	2b00      	cmp	r3, #0
 800058e:	d102      	bne.n	8000596 <_sbrk+0x22>
  {
    __sbrk_heap_end = &_end;
 8000590:	4b11      	ldr	r3, [pc, #68]	; (80005d8 <_sbrk+0x64>)
 8000592:	4a12      	ldr	r2, [pc, #72]	; (80005dc <_sbrk+0x68>)
 8000594:	601a      	str	r2, [r3, #0]
  }

  /* Protect heap from growing into the reserved MSP stack */
  if (__sbrk_heap_end + incr > max_heap)
 8000596:	4b10      	ldr	r3, [pc, #64]	; (80005d8 <_sbrk+0x64>)
 8000598:	681a      	ldr	r2, [r3, #0]
 800059a:	687b      	ldr	r3, [r7, #4]
 800059c:	4413      	add	r3, r2
 800059e:	693a      	ldr	r2, [r7, #16]
 80005a0:	429a      	cmp	r2, r3
 80005a2:	d207      	bcs.n	80005b4 <_sbrk+0x40>
  {
    errno = ENOMEM;
 80005a4:	f000 f846 	bl	8000634 <__errno>
 80005a8:	4603      	mov	r3, r0
 80005aa:	220c      	movs	r2, #12
 80005ac:	601a      	str	r2, [r3, #0]
    return (void *)-1;
 80005ae:	f04f 33ff 	mov.w	r3, #4294967295
 80005b2:	e009      	b.n	80005c8 <_sbrk+0x54>
  }

  prev_heap_end = __sbrk_heap_end;
 80005b4:	4b08      	ldr	r3, [pc, #32]	; (80005d8 <_sbrk+0x64>)
 80005b6:	681b      	ldr	r3, [r3, #0]
 80005b8:	60fb      	str	r3, [r7, #12]
  __sbrk_heap_end += incr;
 80005ba:	4b07      	ldr	r3, [pc, #28]	; (80005d8 <_sbrk+0x64>)
 80005bc:	681a      	ldr	r2, [r3, #0]
 80005be:	687b      	ldr	r3, [r7, #4]
 80005c0:	4413      	add	r3, r2
 80005c2:	4a05      	ldr	r2, [pc, #20]	; (80005d8 <_sbrk+0x64>)
 80005c4:	6013      	str	r3, [r2, #0]

  return (void *)prev_heap_end;
 80005c6:	68fb      	ldr	r3, [r7, #12]
}
 80005c8:	4618      	mov	r0, r3
 80005ca:	3718      	adds	r7, #24
 80005cc:	46bd      	mov	sp, r7
 80005ce:	bd80      	pop	{r7, pc}
 80005d0:	20020000 	.word	0x20020000
 80005d4:	00000400 	.word	0x00000400
 80005d8:	20000080 	.word	0x20000080
 80005dc:	20000098 	.word	0x20000098

080005e0 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 80005e0:	480d      	ldr	r0, [pc, #52]	; (8000618 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 80005e2:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 80005e4:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 80005e8:	480c      	ldr	r0, [pc, #48]	; (800061c <LoopForever+0x6>)
  ldr r1, =_edata
 80005ea:	490d      	ldr	r1, [pc, #52]	; (8000620 <LoopForever+0xa>)
  ldr r2, =_sidata
 80005ec:	4a0d      	ldr	r2, [pc, #52]	; (8000624 <LoopForever+0xe>)
  movs r3, #0
 80005ee:	2300      	movs	r3, #0
  b LoopCopyDataInit
 80005f0:	e002      	b.n	80005f8 <LoopCopyDataInit>

080005f2 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 80005f2:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 80005f4:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 80005f6:	3304      	adds	r3, #4

080005f8 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 80005f8:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 80005fa:	428c      	cmp	r4, r1
  bcc CopyDataInit
 80005fc:	d3f9      	bcc.n	80005f2 <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 80005fe:	4a0a      	ldr	r2, [pc, #40]	; (8000628 <LoopForever+0x12>)
  ldr r4, =_ebss
 8000600:	4c0a      	ldr	r4, [pc, #40]	; (800062c <LoopForever+0x16>)
  movs r3, #0
 8000602:	2300      	movs	r3, #0
  b LoopFillZerobss
 8000604:	e001      	b.n	800060a <LoopFillZerobss>

08000606 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 8000606:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8000608:	3204      	adds	r2, #4

0800060a <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 800060a:	42a2      	cmp	r2, r4
  bcc FillZerobss
 800060c:	d3fb      	bcc.n	8000606 <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 800060e:	f000 f817 	bl	8000640 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 8000612:	f7ff fe43 	bl	800029c <main>

08000616 <LoopForever>:

LoopForever:
  b LoopForever
 8000616:	e7fe      	b.n	8000616 <LoopForever>
  ldr   r0, =_estack
 8000618:	20020000 	.word	0x20020000
  ldr r0, =_sdata
 800061c:	20000000 	.word	0x20000000
  ldr r1, =_edata
 8000620:	20000064 	.word	0x20000064
  ldr r2, =_sidata
 8000624:	0800168c 	.word	0x0800168c
  ldr r2, =_sbss
 8000628:	20000064 	.word	0x20000064
  ldr r4, =_ebss
 800062c:	20000094 	.word	0x20000094

08000630 <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 8000630:	e7fe      	b.n	8000630 <ADC_IRQHandler>
	...

08000634 <__errno>:
 8000634:	4b01      	ldr	r3, [pc, #4]	; (800063c <__errno+0x8>)
 8000636:	6818      	ldr	r0, [r3, #0]
 8000638:	4770      	bx	lr
 800063a:	bf00      	nop
 800063c:	20000000 	.word	0x20000000

08000640 <__libc_init_array>:
 8000640:	b570      	push	{r4, r5, r6, lr}
 8000642:	4d0d      	ldr	r5, [pc, #52]	; (8000678 <__libc_init_array+0x38>)
 8000644:	4c0d      	ldr	r4, [pc, #52]	; (800067c <__libc_init_array+0x3c>)
 8000646:	1b64      	subs	r4, r4, r5
 8000648:	10a4      	asrs	r4, r4, #2
 800064a:	2600      	movs	r6, #0
 800064c:	42a6      	cmp	r6, r4
 800064e:	d109      	bne.n	8000664 <__libc_init_array+0x24>
 8000650:	4d0b      	ldr	r5, [pc, #44]	; (8000680 <__libc_init_array+0x40>)
 8000652:	4c0c      	ldr	r4, [pc, #48]	; (8000684 <__libc_init_array+0x44>)
 8000654:	f000 ffae 	bl	80015b4 <_init>
 8000658:	1b64      	subs	r4, r4, r5
 800065a:	10a4      	asrs	r4, r4, #2
 800065c:	2600      	movs	r6, #0
 800065e:	42a6      	cmp	r6, r4
 8000660:	d105      	bne.n	800066e <__libc_init_array+0x2e>
 8000662:	bd70      	pop	{r4, r5, r6, pc}
 8000664:	f855 3b04 	ldr.w	r3, [r5], #4
 8000668:	4798      	blx	r3
 800066a:	3601      	adds	r6, #1
 800066c:	e7ee      	b.n	800064c <__libc_init_array+0xc>
 800066e:	f855 3b04 	ldr.w	r3, [r5], #4
 8000672:	4798      	blx	r3
 8000674:	3601      	adds	r6, #1
 8000676:	e7f2      	b.n	800065e <__libc_init_array+0x1e>
 8000678:	08001684 	.word	0x08001684
 800067c:	08001684 	.word	0x08001684
 8000680:	08001684 	.word	0x08001684
 8000684:	08001688 	.word	0x08001688

08000688 <memset>:
 8000688:	4402      	add	r2, r0
 800068a:	4603      	mov	r3, r0
 800068c:	4293      	cmp	r3, r2
 800068e:	d100      	bne.n	8000692 <memset+0xa>
 8000690:	4770      	bx	lr
 8000692:	f803 1b01 	strb.w	r1, [r3], #1
 8000696:	e7f9      	b.n	800068c <memset+0x4>

08000698 <iprintf>:
 8000698:	b40f      	push	{r0, r1, r2, r3}
 800069a:	4b0a      	ldr	r3, [pc, #40]	; (80006c4 <iprintf+0x2c>)
 800069c:	b513      	push	{r0, r1, r4, lr}
 800069e:	681c      	ldr	r4, [r3, #0]
 80006a0:	b124      	cbz	r4, 80006ac <iprintf+0x14>
 80006a2:	69a3      	ldr	r3, [r4, #24]
 80006a4:	b913      	cbnz	r3, 80006ac <iprintf+0x14>
 80006a6:	4620      	mov	r0, r4
 80006a8:	f000 f866 	bl	8000778 <__sinit>
 80006ac:	ab05      	add	r3, sp, #20
 80006ae:	9a04      	ldr	r2, [sp, #16]
 80006b0:	68a1      	ldr	r1, [r4, #8]
 80006b2:	9301      	str	r3, [sp, #4]
 80006b4:	4620      	mov	r0, r4
 80006b6:	f000 f9bd 	bl	8000a34 <_vfiprintf_r>
 80006ba:	b002      	add	sp, #8
 80006bc:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80006c0:	b004      	add	sp, #16
 80006c2:	4770      	bx	lr
 80006c4:	20000000 	.word	0x20000000

080006c8 <std>:
 80006c8:	2300      	movs	r3, #0
 80006ca:	b510      	push	{r4, lr}
 80006cc:	4604      	mov	r4, r0
 80006ce:	e9c0 3300 	strd	r3, r3, [r0]
 80006d2:	e9c0 3304 	strd	r3, r3, [r0, #16]
 80006d6:	6083      	str	r3, [r0, #8]
 80006d8:	8181      	strh	r1, [r0, #12]
 80006da:	6643      	str	r3, [r0, #100]	; 0x64
 80006dc:	81c2      	strh	r2, [r0, #14]
 80006de:	6183      	str	r3, [r0, #24]
 80006e0:	4619      	mov	r1, r3
 80006e2:	2208      	movs	r2, #8
 80006e4:	305c      	adds	r0, #92	; 0x5c
 80006e6:	f7ff ffcf 	bl	8000688 <memset>
 80006ea:	4b05      	ldr	r3, [pc, #20]	; (8000700 <std+0x38>)
 80006ec:	6263      	str	r3, [r4, #36]	; 0x24
 80006ee:	4b05      	ldr	r3, [pc, #20]	; (8000704 <std+0x3c>)
 80006f0:	62a3      	str	r3, [r4, #40]	; 0x28
 80006f2:	4b05      	ldr	r3, [pc, #20]	; (8000708 <std+0x40>)
 80006f4:	62e3      	str	r3, [r4, #44]	; 0x2c
 80006f6:	4b05      	ldr	r3, [pc, #20]	; (800070c <std+0x44>)
 80006f8:	6224      	str	r4, [r4, #32]
 80006fa:	6323      	str	r3, [r4, #48]	; 0x30
 80006fc:	bd10      	pop	{r4, pc}
 80006fe:	bf00      	nop
 8000700:	08000fdd 	.word	0x08000fdd
 8000704:	08000fff 	.word	0x08000fff
 8000708:	08001037 	.word	0x08001037
 800070c:	0800105b 	.word	0x0800105b

08000710 <_cleanup_r>:
 8000710:	4901      	ldr	r1, [pc, #4]	; (8000718 <_cleanup_r+0x8>)
 8000712:	f000 b8af 	b.w	8000874 <_fwalk_reent>
 8000716:	bf00      	nop
 8000718:	08001335 	.word	0x08001335

0800071c <__sfmoreglue>:
 800071c:	b570      	push	{r4, r5, r6, lr}
 800071e:	2268      	movs	r2, #104	; 0x68
 8000720:	1e4d      	subs	r5, r1, #1
 8000722:	4355      	muls	r5, r2
 8000724:	460e      	mov	r6, r1
 8000726:	f105 0174 	add.w	r1, r5, #116	; 0x74
 800072a:	f000 f8e5 	bl	80008f8 <_malloc_r>
 800072e:	4604      	mov	r4, r0
 8000730:	b140      	cbz	r0, 8000744 <__sfmoreglue+0x28>
 8000732:	2100      	movs	r1, #0
 8000734:	e9c0 1600 	strd	r1, r6, [r0]
 8000738:	300c      	adds	r0, #12
 800073a:	60a0      	str	r0, [r4, #8]
 800073c:	f105 0268 	add.w	r2, r5, #104	; 0x68
 8000740:	f7ff ffa2 	bl	8000688 <memset>
 8000744:	4620      	mov	r0, r4
 8000746:	bd70      	pop	{r4, r5, r6, pc}

08000748 <__sfp_lock_acquire>:
 8000748:	4801      	ldr	r0, [pc, #4]	; (8000750 <__sfp_lock_acquire+0x8>)
 800074a:	f000 b8b3 	b.w	80008b4 <__retarget_lock_acquire_recursive>
 800074e:	bf00      	nop
 8000750:	20000085 	.word	0x20000085

08000754 <__sfp_lock_release>:
 8000754:	4801      	ldr	r0, [pc, #4]	; (800075c <__sfp_lock_release+0x8>)
 8000756:	f000 b8ae 	b.w	80008b6 <__retarget_lock_release_recursive>
 800075a:	bf00      	nop
 800075c:	20000085 	.word	0x20000085

08000760 <__sinit_lock_acquire>:
 8000760:	4801      	ldr	r0, [pc, #4]	; (8000768 <__sinit_lock_acquire+0x8>)
 8000762:	f000 b8a7 	b.w	80008b4 <__retarget_lock_acquire_recursive>
 8000766:	bf00      	nop
 8000768:	20000086 	.word	0x20000086

0800076c <__sinit_lock_release>:
 800076c:	4801      	ldr	r0, [pc, #4]	; (8000774 <__sinit_lock_release+0x8>)
 800076e:	f000 b8a2 	b.w	80008b6 <__retarget_lock_release_recursive>
 8000772:	bf00      	nop
 8000774:	20000086 	.word	0x20000086

08000778 <__sinit>:
 8000778:	b510      	push	{r4, lr}
 800077a:	4604      	mov	r4, r0
 800077c:	f7ff fff0 	bl	8000760 <__sinit_lock_acquire>
 8000780:	69a3      	ldr	r3, [r4, #24]
 8000782:	b11b      	cbz	r3, 800078c <__sinit+0x14>
 8000784:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8000788:	f7ff bff0 	b.w	800076c <__sinit_lock_release>
 800078c:	e9c4 3312 	strd	r3, r3, [r4, #72]	; 0x48
 8000790:	6523      	str	r3, [r4, #80]	; 0x50
 8000792:	4b13      	ldr	r3, [pc, #76]	; (80007e0 <__sinit+0x68>)
 8000794:	4a13      	ldr	r2, [pc, #76]	; (80007e4 <__sinit+0x6c>)
 8000796:	681b      	ldr	r3, [r3, #0]
 8000798:	62a2      	str	r2, [r4, #40]	; 0x28
 800079a:	42a3      	cmp	r3, r4
 800079c:	bf04      	itt	eq
 800079e:	2301      	moveq	r3, #1
 80007a0:	61a3      	streq	r3, [r4, #24]
 80007a2:	4620      	mov	r0, r4
 80007a4:	f000 f820 	bl	80007e8 <__sfp>
 80007a8:	6060      	str	r0, [r4, #4]
 80007aa:	4620      	mov	r0, r4
 80007ac:	f000 f81c 	bl	80007e8 <__sfp>
 80007b0:	60a0      	str	r0, [r4, #8]
 80007b2:	4620      	mov	r0, r4
 80007b4:	f000 f818 	bl	80007e8 <__sfp>
 80007b8:	2200      	movs	r2, #0
 80007ba:	60e0      	str	r0, [r4, #12]
 80007bc:	2104      	movs	r1, #4
 80007be:	6860      	ldr	r0, [r4, #4]
 80007c0:	f7ff ff82 	bl	80006c8 <std>
 80007c4:	68a0      	ldr	r0, [r4, #8]
 80007c6:	2201      	movs	r2, #1
 80007c8:	2109      	movs	r1, #9
 80007ca:	f7ff ff7d 	bl	80006c8 <std>
 80007ce:	68e0      	ldr	r0, [r4, #12]
 80007d0:	2202      	movs	r2, #2
 80007d2:	2112      	movs	r1, #18
 80007d4:	f7ff ff78 	bl	80006c8 <std>
 80007d8:	2301      	movs	r3, #1
 80007da:	61a3      	str	r3, [r4, #24]
 80007dc:	e7d2      	b.n	8000784 <__sinit+0xc>
 80007de:	bf00      	nop
 80007e0:	080015ec 	.word	0x080015ec
 80007e4:	08000711 	.word	0x08000711

080007e8 <__sfp>:
 80007e8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80007ea:	4607      	mov	r7, r0
 80007ec:	f7ff ffac 	bl	8000748 <__sfp_lock_acquire>
 80007f0:	4b1e      	ldr	r3, [pc, #120]	; (800086c <__sfp+0x84>)
 80007f2:	681e      	ldr	r6, [r3, #0]
 80007f4:	69b3      	ldr	r3, [r6, #24]
 80007f6:	b913      	cbnz	r3, 80007fe <__sfp+0x16>
 80007f8:	4630      	mov	r0, r6
 80007fa:	f7ff ffbd 	bl	8000778 <__sinit>
 80007fe:	3648      	adds	r6, #72	; 0x48
 8000800:	e9d6 3401 	ldrd	r3, r4, [r6, #4]
 8000804:	3b01      	subs	r3, #1
 8000806:	d503      	bpl.n	8000810 <__sfp+0x28>
 8000808:	6833      	ldr	r3, [r6, #0]
 800080a:	b30b      	cbz	r3, 8000850 <__sfp+0x68>
 800080c:	6836      	ldr	r6, [r6, #0]
 800080e:	e7f7      	b.n	8000800 <__sfp+0x18>
 8000810:	f9b4 500c 	ldrsh.w	r5, [r4, #12]
 8000814:	b9d5      	cbnz	r5, 800084c <__sfp+0x64>
 8000816:	4b16      	ldr	r3, [pc, #88]	; (8000870 <__sfp+0x88>)
 8000818:	60e3      	str	r3, [r4, #12]
 800081a:	f104 0058 	add.w	r0, r4, #88	; 0x58
 800081e:	6665      	str	r5, [r4, #100]	; 0x64
 8000820:	f000 f847 	bl	80008b2 <__retarget_lock_init_recursive>
 8000824:	f7ff ff96 	bl	8000754 <__sfp_lock_release>
 8000828:	e9c4 5501 	strd	r5, r5, [r4, #4]
 800082c:	e9c4 5504 	strd	r5, r5, [r4, #16]
 8000830:	6025      	str	r5, [r4, #0]
 8000832:	61a5      	str	r5, [r4, #24]
 8000834:	2208      	movs	r2, #8
 8000836:	4629      	mov	r1, r5
 8000838:	f104 005c 	add.w	r0, r4, #92	; 0x5c
 800083c:	f7ff ff24 	bl	8000688 <memset>
 8000840:	e9c4 550d 	strd	r5, r5, [r4, #52]	; 0x34
 8000844:	e9c4 5512 	strd	r5, r5, [r4, #72]	; 0x48
 8000848:	4620      	mov	r0, r4
 800084a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800084c:	3468      	adds	r4, #104	; 0x68
 800084e:	e7d9      	b.n	8000804 <__sfp+0x1c>
 8000850:	2104      	movs	r1, #4
 8000852:	4638      	mov	r0, r7
 8000854:	f7ff ff62 	bl	800071c <__sfmoreglue>
 8000858:	4604      	mov	r4, r0
 800085a:	6030      	str	r0, [r6, #0]
 800085c:	2800      	cmp	r0, #0
 800085e:	d1d5      	bne.n	800080c <__sfp+0x24>
 8000860:	f7ff ff78 	bl	8000754 <__sfp_lock_release>
 8000864:	230c      	movs	r3, #12
 8000866:	603b      	str	r3, [r7, #0]
 8000868:	e7ee      	b.n	8000848 <__sfp+0x60>
 800086a:	bf00      	nop
 800086c:	080015ec 	.word	0x080015ec
 8000870:	ffff0001 	.word	0xffff0001

08000874 <_fwalk_reent>:
 8000874:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8000878:	4606      	mov	r6, r0
 800087a:	4688      	mov	r8, r1
 800087c:	f100 0448 	add.w	r4, r0, #72	; 0x48
 8000880:	2700      	movs	r7, #0
 8000882:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 8000886:	f1b9 0901 	subs.w	r9, r9, #1
 800088a:	d505      	bpl.n	8000898 <_fwalk_reent+0x24>
 800088c:	6824      	ldr	r4, [r4, #0]
 800088e:	2c00      	cmp	r4, #0
 8000890:	d1f7      	bne.n	8000882 <_fwalk_reent+0xe>
 8000892:	4638      	mov	r0, r7
 8000894:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8000898:	89ab      	ldrh	r3, [r5, #12]
 800089a:	2b01      	cmp	r3, #1
 800089c:	d907      	bls.n	80008ae <_fwalk_reent+0x3a>
 800089e:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 80008a2:	3301      	adds	r3, #1
 80008a4:	d003      	beq.n	80008ae <_fwalk_reent+0x3a>
 80008a6:	4629      	mov	r1, r5
 80008a8:	4630      	mov	r0, r6
 80008aa:	47c0      	blx	r8
 80008ac:	4307      	orrs	r7, r0
 80008ae:	3568      	adds	r5, #104	; 0x68
 80008b0:	e7e9      	b.n	8000886 <_fwalk_reent+0x12>

080008b2 <__retarget_lock_init_recursive>:
 80008b2:	4770      	bx	lr

080008b4 <__retarget_lock_acquire_recursive>:
 80008b4:	4770      	bx	lr

080008b6 <__retarget_lock_release_recursive>:
 80008b6:	4770      	bx	lr

080008b8 <sbrk_aligned>:
 80008b8:	b570      	push	{r4, r5, r6, lr}
 80008ba:	4e0e      	ldr	r6, [pc, #56]	; (80008f4 <sbrk_aligned+0x3c>)
 80008bc:	460c      	mov	r4, r1
 80008be:	6831      	ldr	r1, [r6, #0]
 80008c0:	4605      	mov	r5, r0
 80008c2:	b911      	cbnz	r1, 80008ca <sbrk_aligned+0x12>
 80008c4:	f000 fb7a 	bl	8000fbc <_sbrk_r>
 80008c8:	6030      	str	r0, [r6, #0]
 80008ca:	4621      	mov	r1, r4
 80008cc:	4628      	mov	r0, r5
 80008ce:	f000 fb75 	bl	8000fbc <_sbrk_r>
 80008d2:	1c43      	adds	r3, r0, #1
 80008d4:	d00a      	beq.n	80008ec <sbrk_aligned+0x34>
 80008d6:	1cc4      	adds	r4, r0, #3
 80008d8:	f024 0403 	bic.w	r4, r4, #3
 80008dc:	42a0      	cmp	r0, r4
 80008de:	d007      	beq.n	80008f0 <sbrk_aligned+0x38>
 80008e0:	1a21      	subs	r1, r4, r0
 80008e2:	4628      	mov	r0, r5
 80008e4:	f000 fb6a 	bl	8000fbc <_sbrk_r>
 80008e8:	3001      	adds	r0, #1
 80008ea:	d101      	bne.n	80008f0 <sbrk_aligned+0x38>
 80008ec:	f04f 34ff 	mov.w	r4, #4294967295
 80008f0:	4620      	mov	r0, r4
 80008f2:	bd70      	pop	{r4, r5, r6, pc}
 80008f4:	2000008c 	.word	0x2000008c

080008f8 <_malloc_r>:
 80008f8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80008fc:	1ccd      	adds	r5, r1, #3
 80008fe:	f025 0503 	bic.w	r5, r5, #3
 8000902:	3508      	adds	r5, #8
 8000904:	2d0c      	cmp	r5, #12
 8000906:	bf38      	it	cc
 8000908:	250c      	movcc	r5, #12
 800090a:	2d00      	cmp	r5, #0
 800090c:	4607      	mov	r7, r0
 800090e:	db01      	blt.n	8000914 <_malloc_r+0x1c>
 8000910:	42a9      	cmp	r1, r5
 8000912:	d905      	bls.n	8000920 <_malloc_r+0x28>
 8000914:	230c      	movs	r3, #12
 8000916:	603b      	str	r3, [r7, #0]
 8000918:	2600      	movs	r6, #0
 800091a:	4630      	mov	r0, r6
 800091c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8000920:	4e2e      	ldr	r6, [pc, #184]	; (80009dc <_malloc_r+0xe4>)
 8000922:	f000 fdbb 	bl	800149c <__malloc_lock>
 8000926:	6833      	ldr	r3, [r6, #0]
 8000928:	461c      	mov	r4, r3
 800092a:	bb34      	cbnz	r4, 800097a <_malloc_r+0x82>
 800092c:	4629      	mov	r1, r5
 800092e:	4638      	mov	r0, r7
 8000930:	f7ff ffc2 	bl	80008b8 <sbrk_aligned>
 8000934:	1c43      	adds	r3, r0, #1
 8000936:	4604      	mov	r4, r0
 8000938:	d14d      	bne.n	80009d6 <_malloc_r+0xde>
 800093a:	6834      	ldr	r4, [r6, #0]
 800093c:	4626      	mov	r6, r4
 800093e:	2e00      	cmp	r6, #0
 8000940:	d140      	bne.n	80009c4 <_malloc_r+0xcc>
 8000942:	6823      	ldr	r3, [r4, #0]
 8000944:	4631      	mov	r1, r6
 8000946:	4638      	mov	r0, r7
 8000948:	eb04 0803 	add.w	r8, r4, r3
 800094c:	f000 fb36 	bl	8000fbc <_sbrk_r>
 8000950:	4580      	cmp	r8, r0
 8000952:	d13a      	bne.n	80009ca <_malloc_r+0xd2>
 8000954:	6821      	ldr	r1, [r4, #0]
 8000956:	3503      	adds	r5, #3
 8000958:	1a6d      	subs	r5, r5, r1
 800095a:	f025 0503 	bic.w	r5, r5, #3
 800095e:	3508      	adds	r5, #8
 8000960:	2d0c      	cmp	r5, #12
 8000962:	bf38      	it	cc
 8000964:	250c      	movcc	r5, #12
 8000966:	4629      	mov	r1, r5
 8000968:	4638      	mov	r0, r7
 800096a:	f7ff ffa5 	bl	80008b8 <sbrk_aligned>
 800096e:	3001      	adds	r0, #1
 8000970:	d02b      	beq.n	80009ca <_malloc_r+0xd2>
 8000972:	6823      	ldr	r3, [r4, #0]
 8000974:	442b      	add	r3, r5
 8000976:	6023      	str	r3, [r4, #0]
 8000978:	e00e      	b.n	8000998 <_malloc_r+0xa0>
 800097a:	6822      	ldr	r2, [r4, #0]
 800097c:	1b52      	subs	r2, r2, r5
 800097e:	d41e      	bmi.n	80009be <_malloc_r+0xc6>
 8000980:	2a0b      	cmp	r2, #11
 8000982:	d916      	bls.n	80009b2 <_malloc_r+0xba>
 8000984:	1961      	adds	r1, r4, r5
 8000986:	42a3      	cmp	r3, r4
 8000988:	6025      	str	r5, [r4, #0]
 800098a:	bf18      	it	ne
 800098c:	6059      	strne	r1, [r3, #4]
 800098e:	6863      	ldr	r3, [r4, #4]
 8000990:	bf08      	it	eq
 8000992:	6031      	streq	r1, [r6, #0]
 8000994:	5162      	str	r2, [r4, r5]
 8000996:	604b      	str	r3, [r1, #4]
 8000998:	4638      	mov	r0, r7
 800099a:	f104 060b 	add.w	r6, r4, #11
 800099e:	f000 fd83 	bl	80014a8 <__malloc_unlock>
 80009a2:	f026 0607 	bic.w	r6, r6, #7
 80009a6:	1d23      	adds	r3, r4, #4
 80009a8:	1af2      	subs	r2, r6, r3
 80009aa:	d0b6      	beq.n	800091a <_malloc_r+0x22>
 80009ac:	1b9b      	subs	r3, r3, r6
 80009ae:	50a3      	str	r3, [r4, r2]
 80009b0:	e7b3      	b.n	800091a <_malloc_r+0x22>
 80009b2:	6862      	ldr	r2, [r4, #4]
 80009b4:	42a3      	cmp	r3, r4
 80009b6:	bf0c      	ite	eq
 80009b8:	6032      	streq	r2, [r6, #0]
 80009ba:	605a      	strne	r2, [r3, #4]
 80009bc:	e7ec      	b.n	8000998 <_malloc_r+0xa0>
 80009be:	4623      	mov	r3, r4
 80009c0:	6864      	ldr	r4, [r4, #4]
 80009c2:	e7b2      	b.n	800092a <_malloc_r+0x32>
 80009c4:	4634      	mov	r4, r6
 80009c6:	6876      	ldr	r6, [r6, #4]
 80009c8:	e7b9      	b.n	800093e <_malloc_r+0x46>
 80009ca:	230c      	movs	r3, #12
 80009cc:	603b      	str	r3, [r7, #0]
 80009ce:	4638      	mov	r0, r7
 80009d0:	f000 fd6a 	bl	80014a8 <__malloc_unlock>
 80009d4:	e7a1      	b.n	800091a <_malloc_r+0x22>
 80009d6:	6025      	str	r5, [r4, #0]
 80009d8:	e7de      	b.n	8000998 <_malloc_r+0xa0>
 80009da:	bf00      	nop
 80009dc:	20000088 	.word	0x20000088

080009e0 <__sfputc_r>:
 80009e0:	6893      	ldr	r3, [r2, #8]
 80009e2:	3b01      	subs	r3, #1
 80009e4:	2b00      	cmp	r3, #0
 80009e6:	b410      	push	{r4}
 80009e8:	6093      	str	r3, [r2, #8]
 80009ea:	da08      	bge.n	80009fe <__sfputc_r+0x1e>
 80009ec:	6994      	ldr	r4, [r2, #24]
 80009ee:	42a3      	cmp	r3, r4
 80009f0:	db01      	blt.n	80009f6 <__sfputc_r+0x16>
 80009f2:	290a      	cmp	r1, #10
 80009f4:	d103      	bne.n	80009fe <__sfputc_r+0x1e>
 80009f6:	f85d 4b04 	ldr.w	r4, [sp], #4
 80009fa:	f000 bb33 	b.w	8001064 <__swbuf_r>
 80009fe:	6813      	ldr	r3, [r2, #0]
 8000a00:	1c58      	adds	r0, r3, #1
 8000a02:	6010      	str	r0, [r2, #0]
 8000a04:	7019      	strb	r1, [r3, #0]
 8000a06:	4608      	mov	r0, r1
 8000a08:	f85d 4b04 	ldr.w	r4, [sp], #4
 8000a0c:	4770      	bx	lr

08000a0e <__sfputs_r>:
 8000a0e:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000a10:	4606      	mov	r6, r0
 8000a12:	460f      	mov	r7, r1
 8000a14:	4614      	mov	r4, r2
 8000a16:	18d5      	adds	r5, r2, r3
 8000a18:	42ac      	cmp	r4, r5
 8000a1a:	d101      	bne.n	8000a20 <__sfputs_r+0x12>
 8000a1c:	2000      	movs	r0, #0
 8000a1e:	e007      	b.n	8000a30 <__sfputs_r+0x22>
 8000a20:	f814 1b01 	ldrb.w	r1, [r4], #1
 8000a24:	463a      	mov	r2, r7
 8000a26:	4630      	mov	r0, r6
 8000a28:	f7ff ffda 	bl	80009e0 <__sfputc_r>
 8000a2c:	1c43      	adds	r3, r0, #1
 8000a2e:	d1f3      	bne.n	8000a18 <__sfputs_r+0xa>
 8000a30:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

08000a34 <_vfiprintf_r>:
 8000a34:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8000a38:	460d      	mov	r5, r1
 8000a3a:	b09d      	sub	sp, #116	; 0x74
 8000a3c:	4614      	mov	r4, r2
 8000a3e:	4698      	mov	r8, r3
 8000a40:	4606      	mov	r6, r0
 8000a42:	b118      	cbz	r0, 8000a4c <_vfiprintf_r+0x18>
 8000a44:	6983      	ldr	r3, [r0, #24]
 8000a46:	b90b      	cbnz	r3, 8000a4c <_vfiprintf_r+0x18>
 8000a48:	f7ff fe96 	bl	8000778 <__sinit>
 8000a4c:	4b89      	ldr	r3, [pc, #548]	; (8000c74 <_vfiprintf_r+0x240>)
 8000a4e:	429d      	cmp	r5, r3
 8000a50:	d11b      	bne.n	8000a8a <_vfiprintf_r+0x56>
 8000a52:	6875      	ldr	r5, [r6, #4]
 8000a54:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8000a56:	07d9      	lsls	r1, r3, #31
 8000a58:	d405      	bmi.n	8000a66 <_vfiprintf_r+0x32>
 8000a5a:	89ab      	ldrh	r3, [r5, #12]
 8000a5c:	059a      	lsls	r2, r3, #22
 8000a5e:	d402      	bmi.n	8000a66 <_vfiprintf_r+0x32>
 8000a60:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8000a62:	f7ff ff27 	bl	80008b4 <__retarget_lock_acquire_recursive>
 8000a66:	89ab      	ldrh	r3, [r5, #12]
 8000a68:	071b      	lsls	r3, r3, #28
 8000a6a:	d501      	bpl.n	8000a70 <_vfiprintf_r+0x3c>
 8000a6c:	692b      	ldr	r3, [r5, #16]
 8000a6e:	b9eb      	cbnz	r3, 8000aac <_vfiprintf_r+0x78>
 8000a70:	4629      	mov	r1, r5
 8000a72:	4630      	mov	r0, r6
 8000a74:	f000 fb5a 	bl	800112c <__swsetup_r>
 8000a78:	b1c0      	cbz	r0, 8000aac <_vfiprintf_r+0x78>
 8000a7a:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8000a7c:	07dc      	lsls	r4, r3, #31
 8000a7e:	d50e      	bpl.n	8000a9e <_vfiprintf_r+0x6a>
 8000a80:	f04f 30ff 	mov.w	r0, #4294967295
 8000a84:	b01d      	add	sp, #116	; 0x74
 8000a86:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8000a8a:	4b7b      	ldr	r3, [pc, #492]	; (8000c78 <_vfiprintf_r+0x244>)
 8000a8c:	429d      	cmp	r5, r3
 8000a8e:	d101      	bne.n	8000a94 <_vfiprintf_r+0x60>
 8000a90:	68b5      	ldr	r5, [r6, #8]
 8000a92:	e7df      	b.n	8000a54 <_vfiprintf_r+0x20>
 8000a94:	4b79      	ldr	r3, [pc, #484]	; (8000c7c <_vfiprintf_r+0x248>)
 8000a96:	429d      	cmp	r5, r3
 8000a98:	bf08      	it	eq
 8000a9a:	68f5      	ldreq	r5, [r6, #12]
 8000a9c:	e7da      	b.n	8000a54 <_vfiprintf_r+0x20>
 8000a9e:	89ab      	ldrh	r3, [r5, #12]
 8000aa0:	0598      	lsls	r0, r3, #22
 8000aa2:	d4ed      	bmi.n	8000a80 <_vfiprintf_r+0x4c>
 8000aa4:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8000aa6:	f7ff ff06 	bl	80008b6 <__retarget_lock_release_recursive>
 8000aaa:	e7e9      	b.n	8000a80 <_vfiprintf_r+0x4c>
 8000aac:	2300      	movs	r3, #0
 8000aae:	9309      	str	r3, [sp, #36]	; 0x24
 8000ab0:	2320      	movs	r3, #32
 8000ab2:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 8000ab6:	f8cd 800c 	str.w	r8, [sp, #12]
 8000aba:	2330      	movs	r3, #48	; 0x30
 8000abc:	f8df 81c0 	ldr.w	r8, [pc, #448]	; 8000c80 <_vfiprintf_r+0x24c>
 8000ac0:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 8000ac4:	f04f 0901 	mov.w	r9, #1
 8000ac8:	4623      	mov	r3, r4
 8000aca:	469a      	mov	sl, r3
 8000acc:	f813 2b01 	ldrb.w	r2, [r3], #1
 8000ad0:	b10a      	cbz	r2, 8000ad6 <_vfiprintf_r+0xa2>
 8000ad2:	2a25      	cmp	r2, #37	; 0x25
 8000ad4:	d1f9      	bne.n	8000aca <_vfiprintf_r+0x96>
 8000ad6:	ebba 0b04 	subs.w	fp, sl, r4
 8000ada:	d00b      	beq.n	8000af4 <_vfiprintf_r+0xc0>
 8000adc:	465b      	mov	r3, fp
 8000ade:	4622      	mov	r2, r4
 8000ae0:	4629      	mov	r1, r5
 8000ae2:	4630      	mov	r0, r6
 8000ae4:	f7ff ff93 	bl	8000a0e <__sfputs_r>
 8000ae8:	3001      	adds	r0, #1
 8000aea:	f000 80aa 	beq.w	8000c42 <_vfiprintf_r+0x20e>
 8000aee:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8000af0:	445a      	add	r2, fp
 8000af2:	9209      	str	r2, [sp, #36]	; 0x24
 8000af4:	f89a 3000 	ldrb.w	r3, [sl]
 8000af8:	2b00      	cmp	r3, #0
 8000afa:	f000 80a2 	beq.w	8000c42 <_vfiprintf_r+0x20e>
 8000afe:	2300      	movs	r3, #0
 8000b00:	f04f 32ff 	mov.w	r2, #4294967295
 8000b04:	e9cd 2305 	strd	r2, r3, [sp, #20]
 8000b08:	f10a 0a01 	add.w	sl, sl, #1
 8000b0c:	9304      	str	r3, [sp, #16]
 8000b0e:	9307      	str	r3, [sp, #28]
 8000b10:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 8000b14:	931a      	str	r3, [sp, #104]	; 0x68
 8000b16:	4654      	mov	r4, sl
 8000b18:	2205      	movs	r2, #5
 8000b1a:	f814 1b01 	ldrb.w	r1, [r4], #1
 8000b1e:	4858      	ldr	r0, [pc, #352]	; (8000c80 <_vfiprintf_r+0x24c>)
 8000b20:	f7ff fb5e 	bl	80001e0 <memchr>
 8000b24:	9a04      	ldr	r2, [sp, #16]
 8000b26:	b9d8      	cbnz	r0, 8000b60 <_vfiprintf_r+0x12c>
 8000b28:	06d1      	lsls	r1, r2, #27
 8000b2a:	bf44      	itt	mi
 8000b2c:	2320      	movmi	r3, #32
 8000b2e:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 8000b32:	0713      	lsls	r3, r2, #28
 8000b34:	bf44      	itt	mi
 8000b36:	232b      	movmi	r3, #43	; 0x2b
 8000b38:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 8000b3c:	f89a 3000 	ldrb.w	r3, [sl]
 8000b40:	2b2a      	cmp	r3, #42	; 0x2a
 8000b42:	d015      	beq.n	8000b70 <_vfiprintf_r+0x13c>
 8000b44:	9a07      	ldr	r2, [sp, #28]
 8000b46:	4654      	mov	r4, sl
 8000b48:	2000      	movs	r0, #0
 8000b4a:	f04f 0c0a 	mov.w	ip, #10
 8000b4e:	4621      	mov	r1, r4
 8000b50:	f811 3b01 	ldrb.w	r3, [r1], #1
 8000b54:	3b30      	subs	r3, #48	; 0x30
 8000b56:	2b09      	cmp	r3, #9
 8000b58:	d94e      	bls.n	8000bf8 <_vfiprintf_r+0x1c4>
 8000b5a:	b1b0      	cbz	r0, 8000b8a <_vfiprintf_r+0x156>
 8000b5c:	9207      	str	r2, [sp, #28]
 8000b5e:	e014      	b.n	8000b8a <_vfiprintf_r+0x156>
 8000b60:	eba0 0308 	sub.w	r3, r0, r8
 8000b64:	fa09 f303 	lsl.w	r3, r9, r3
 8000b68:	4313      	orrs	r3, r2
 8000b6a:	9304      	str	r3, [sp, #16]
 8000b6c:	46a2      	mov	sl, r4
 8000b6e:	e7d2      	b.n	8000b16 <_vfiprintf_r+0xe2>
 8000b70:	9b03      	ldr	r3, [sp, #12]
 8000b72:	1d19      	adds	r1, r3, #4
 8000b74:	681b      	ldr	r3, [r3, #0]
 8000b76:	9103      	str	r1, [sp, #12]
 8000b78:	2b00      	cmp	r3, #0
 8000b7a:	bfbb      	ittet	lt
 8000b7c:	425b      	neglt	r3, r3
 8000b7e:	f042 0202 	orrlt.w	r2, r2, #2
 8000b82:	9307      	strge	r3, [sp, #28]
 8000b84:	9307      	strlt	r3, [sp, #28]
 8000b86:	bfb8      	it	lt
 8000b88:	9204      	strlt	r2, [sp, #16]
 8000b8a:	7823      	ldrb	r3, [r4, #0]
 8000b8c:	2b2e      	cmp	r3, #46	; 0x2e
 8000b8e:	d10c      	bne.n	8000baa <_vfiprintf_r+0x176>
 8000b90:	7863      	ldrb	r3, [r4, #1]
 8000b92:	2b2a      	cmp	r3, #42	; 0x2a
 8000b94:	d135      	bne.n	8000c02 <_vfiprintf_r+0x1ce>
 8000b96:	9b03      	ldr	r3, [sp, #12]
 8000b98:	1d1a      	adds	r2, r3, #4
 8000b9a:	681b      	ldr	r3, [r3, #0]
 8000b9c:	9203      	str	r2, [sp, #12]
 8000b9e:	2b00      	cmp	r3, #0
 8000ba0:	bfb8      	it	lt
 8000ba2:	f04f 33ff 	movlt.w	r3, #4294967295
 8000ba6:	3402      	adds	r4, #2
 8000ba8:	9305      	str	r3, [sp, #20]
 8000baa:	f8df a0e4 	ldr.w	sl, [pc, #228]	; 8000c90 <_vfiprintf_r+0x25c>
 8000bae:	7821      	ldrb	r1, [r4, #0]
 8000bb0:	2203      	movs	r2, #3
 8000bb2:	4650      	mov	r0, sl
 8000bb4:	f7ff fb14 	bl	80001e0 <memchr>
 8000bb8:	b140      	cbz	r0, 8000bcc <_vfiprintf_r+0x198>
 8000bba:	2340      	movs	r3, #64	; 0x40
 8000bbc:	eba0 000a 	sub.w	r0, r0, sl
 8000bc0:	fa03 f000 	lsl.w	r0, r3, r0
 8000bc4:	9b04      	ldr	r3, [sp, #16]
 8000bc6:	4303      	orrs	r3, r0
 8000bc8:	3401      	adds	r4, #1
 8000bca:	9304      	str	r3, [sp, #16]
 8000bcc:	f814 1b01 	ldrb.w	r1, [r4], #1
 8000bd0:	482c      	ldr	r0, [pc, #176]	; (8000c84 <_vfiprintf_r+0x250>)
 8000bd2:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 8000bd6:	2206      	movs	r2, #6
 8000bd8:	f7ff fb02 	bl	80001e0 <memchr>
 8000bdc:	2800      	cmp	r0, #0
 8000bde:	d03f      	beq.n	8000c60 <_vfiprintf_r+0x22c>
 8000be0:	4b29      	ldr	r3, [pc, #164]	; (8000c88 <_vfiprintf_r+0x254>)
 8000be2:	bb1b      	cbnz	r3, 8000c2c <_vfiprintf_r+0x1f8>
 8000be4:	9b03      	ldr	r3, [sp, #12]
 8000be6:	3307      	adds	r3, #7
 8000be8:	f023 0307 	bic.w	r3, r3, #7
 8000bec:	3308      	adds	r3, #8
 8000bee:	9303      	str	r3, [sp, #12]
 8000bf0:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8000bf2:	443b      	add	r3, r7
 8000bf4:	9309      	str	r3, [sp, #36]	; 0x24
 8000bf6:	e767      	b.n	8000ac8 <_vfiprintf_r+0x94>
 8000bf8:	fb0c 3202 	mla	r2, ip, r2, r3
 8000bfc:	460c      	mov	r4, r1
 8000bfe:	2001      	movs	r0, #1
 8000c00:	e7a5      	b.n	8000b4e <_vfiprintf_r+0x11a>
 8000c02:	2300      	movs	r3, #0
 8000c04:	3401      	adds	r4, #1
 8000c06:	9305      	str	r3, [sp, #20]
 8000c08:	4619      	mov	r1, r3
 8000c0a:	f04f 0c0a 	mov.w	ip, #10
 8000c0e:	4620      	mov	r0, r4
 8000c10:	f810 2b01 	ldrb.w	r2, [r0], #1
 8000c14:	3a30      	subs	r2, #48	; 0x30
 8000c16:	2a09      	cmp	r2, #9
 8000c18:	d903      	bls.n	8000c22 <_vfiprintf_r+0x1ee>
 8000c1a:	2b00      	cmp	r3, #0
 8000c1c:	d0c5      	beq.n	8000baa <_vfiprintf_r+0x176>
 8000c1e:	9105      	str	r1, [sp, #20]
 8000c20:	e7c3      	b.n	8000baa <_vfiprintf_r+0x176>
 8000c22:	fb0c 2101 	mla	r1, ip, r1, r2
 8000c26:	4604      	mov	r4, r0
 8000c28:	2301      	movs	r3, #1
 8000c2a:	e7f0      	b.n	8000c0e <_vfiprintf_r+0x1da>
 8000c2c:	ab03      	add	r3, sp, #12
 8000c2e:	9300      	str	r3, [sp, #0]
 8000c30:	462a      	mov	r2, r5
 8000c32:	4b16      	ldr	r3, [pc, #88]	; (8000c8c <_vfiprintf_r+0x258>)
 8000c34:	a904      	add	r1, sp, #16
 8000c36:	4630      	mov	r0, r6
 8000c38:	f3af 8000 	nop.w
 8000c3c:	4607      	mov	r7, r0
 8000c3e:	1c78      	adds	r0, r7, #1
 8000c40:	d1d6      	bne.n	8000bf0 <_vfiprintf_r+0x1bc>
 8000c42:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8000c44:	07d9      	lsls	r1, r3, #31
 8000c46:	d405      	bmi.n	8000c54 <_vfiprintf_r+0x220>
 8000c48:	89ab      	ldrh	r3, [r5, #12]
 8000c4a:	059a      	lsls	r2, r3, #22
 8000c4c:	d402      	bmi.n	8000c54 <_vfiprintf_r+0x220>
 8000c4e:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8000c50:	f7ff fe31 	bl	80008b6 <__retarget_lock_release_recursive>
 8000c54:	89ab      	ldrh	r3, [r5, #12]
 8000c56:	065b      	lsls	r3, r3, #25
 8000c58:	f53f af12 	bmi.w	8000a80 <_vfiprintf_r+0x4c>
 8000c5c:	9809      	ldr	r0, [sp, #36]	; 0x24
 8000c5e:	e711      	b.n	8000a84 <_vfiprintf_r+0x50>
 8000c60:	ab03      	add	r3, sp, #12
 8000c62:	9300      	str	r3, [sp, #0]
 8000c64:	462a      	mov	r2, r5
 8000c66:	4b09      	ldr	r3, [pc, #36]	; (8000c8c <_vfiprintf_r+0x258>)
 8000c68:	a904      	add	r1, sp, #16
 8000c6a:	4630      	mov	r0, r6
 8000c6c:	f000 f880 	bl	8000d70 <_printf_i>
 8000c70:	e7e4      	b.n	8000c3c <_vfiprintf_r+0x208>
 8000c72:	bf00      	nop
 8000c74:	08001610 	.word	0x08001610
 8000c78:	08001630 	.word	0x08001630
 8000c7c:	080015f0 	.word	0x080015f0
 8000c80:	08001650 	.word	0x08001650
 8000c84:	0800165a 	.word	0x0800165a
 8000c88:	00000000 	.word	0x00000000
 8000c8c:	08000a0f 	.word	0x08000a0f
 8000c90:	08001656 	.word	0x08001656

08000c94 <_printf_common>:
 8000c94:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8000c98:	4616      	mov	r6, r2
 8000c9a:	4699      	mov	r9, r3
 8000c9c:	688a      	ldr	r2, [r1, #8]
 8000c9e:	690b      	ldr	r3, [r1, #16]
 8000ca0:	f8dd 8020 	ldr.w	r8, [sp, #32]
 8000ca4:	4293      	cmp	r3, r2
 8000ca6:	bfb8      	it	lt
 8000ca8:	4613      	movlt	r3, r2
 8000caa:	6033      	str	r3, [r6, #0]
 8000cac:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 8000cb0:	4607      	mov	r7, r0
 8000cb2:	460c      	mov	r4, r1
 8000cb4:	b10a      	cbz	r2, 8000cba <_printf_common+0x26>
 8000cb6:	3301      	adds	r3, #1
 8000cb8:	6033      	str	r3, [r6, #0]
 8000cba:	6823      	ldr	r3, [r4, #0]
 8000cbc:	0699      	lsls	r1, r3, #26
 8000cbe:	bf42      	ittt	mi
 8000cc0:	6833      	ldrmi	r3, [r6, #0]
 8000cc2:	3302      	addmi	r3, #2
 8000cc4:	6033      	strmi	r3, [r6, #0]
 8000cc6:	6825      	ldr	r5, [r4, #0]
 8000cc8:	f015 0506 	ands.w	r5, r5, #6
 8000ccc:	d106      	bne.n	8000cdc <_printf_common+0x48>
 8000cce:	f104 0a19 	add.w	sl, r4, #25
 8000cd2:	68e3      	ldr	r3, [r4, #12]
 8000cd4:	6832      	ldr	r2, [r6, #0]
 8000cd6:	1a9b      	subs	r3, r3, r2
 8000cd8:	42ab      	cmp	r3, r5
 8000cda:	dc26      	bgt.n	8000d2a <_printf_common+0x96>
 8000cdc:	f894 2043 	ldrb.w	r2, [r4, #67]	; 0x43
 8000ce0:	1e13      	subs	r3, r2, #0
 8000ce2:	6822      	ldr	r2, [r4, #0]
 8000ce4:	bf18      	it	ne
 8000ce6:	2301      	movne	r3, #1
 8000ce8:	0692      	lsls	r2, r2, #26
 8000cea:	d42b      	bmi.n	8000d44 <_printf_common+0xb0>
 8000cec:	f104 0243 	add.w	r2, r4, #67	; 0x43
 8000cf0:	4649      	mov	r1, r9
 8000cf2:	4638      	mov	r0, r7
 8000cf4:	47c0      	blx	r8
 8000cf6:	3001      	adds	r0, #1
 8000cf8:	d01e      	beq.n	8000d38 <_printf_common+0xa4>
 8000cfa:	6823      	ldr	r3, [r4, #0]
 8000cfc:	68e5      	ldr	r5, [r4, #12]
 8000cfe:	6832      	ldr	r2, [r6, #0]
 8000d00:	f003 0306 	and.w	r3, r3, #6
 8000d04:	2b04      	cmp	r3, #4
 8000d06:	bf08      	it	eq
 8000d08:	1aad      	subeq	r5, r5, r2
 8000d0a:	68a3      	ldr	r3, [r4, #8]
 8000d0c:	6922      	ldr	r2, [r4, #16]
 8000d0e:	bf0c      	ite	eq
 8000d10:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 8000d14:	2500      	movne	r5, #0
 8000d16:	4293      	cmp	r3, r2
 8000d18:	bfc4      	itt	gt
 8000d1a:	1a9b      	subgt	r3, r3, r2
 8000d1c:	18ed      	addgt	r5, r5, r3
 8000d1e:	2600      	movs	r6, #0
 8000d20:	341a      	adds	r4, #26
 8000d22:	42b5      	cmp	r5, r6
 8000d24:	d11a      	bne.n	8000d5c <_printf_common+0xc8>
 8000d26:	2000      	movs	r0, #0
 8000d28:	e008      	b.n	8000d3c <_printf_common+0xa8>
 8000d2a:	2301      	movs	r3, #1
 8000d2c:	4652      	mov	r2, sl
 8000d2e:	4649      	mov	r1, r9
 8000d30:	4638      	mov	r0, r7
 8000d32:	47c0      	blx	r8
 8000d34:	3001      	adds	r0, #1
 8000d36:	d103      	bne.n	8000d40 <_printf_common+0xac>
 8000d38:	f04f 30ff 	mov.w	r0, #4294967295
 8000d3c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000d40:	3501      	adds	r5, #1
 8000d42:	e7c6      	b.n	8000cd2 <_printf_common+0x3e>
 8000d44:	18e1      	adds	r1, r4, r3
 8000d46:	1c5a      	adds	r2, r3, #1
 8000d48:	2030      	movs	r0, #48	; 0x30
 8000d4a:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 8000d4e:	4422      	add	r2, r4
 8000d50:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 8000d54:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 8000d58:	3302      	adds	r3, #2
 8000d5a:	e7c7      	b.n	8000cec <_printf_common+0x58>
 8000d5c:	2301      	movs	r3, #1
 8000d5e:	4622      	mov	r2, r4
 8000d60:	4649      	mov	r1, r9
 8000d62:	4638      	mov	r0, r7
 8000d64:	47c0      	blx	r8
 8000d66:	3001      	adds	r0, #1
 8000d68:	d0e6      	beq.n	8000d38 <_printf_common+0xa4>
 8000d6a:	3601      	adds	r6, #1
 8000d6c:	e7d9      	b.n	8000d22 <_printf_common+0x8e>
	...

08000d70 <_printf_i>:
 8000d70:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8000d74:	7e0f      	ldrb	r7, [r1, #24]
 8000d76:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8000d78:	2f78      	cmp	r7, #120	; 0x78
 8000d7a:	4691      	mov	r9, r2
 8000d7c:	4680      	mov	r8, r0
 8000d7e:	460c      	mov	r4, r1
 8000d80:	469a      	mov	sl, r3
 8000d82:	f101 0243 	add.w	r2, r1, #67	; 0x43
 8000d86:	d807      	bhi.n	8000d98 <_printf_i+0x28>
 8000d88:	2f62      	cmp	r7, #98	; 0x62
 8000d8a:	d80a      	bhi.n	8000da2 <_printf_i+0x32>
 8000d8c:	2f00      	cmp	r7, #0
 8000d8e:	f000 80d8 	beq.w	8000f42 <_printf_i+0x1d2>
 8000d92:	2f58      	cmp	r7, #88	; 0x58
 8000d94:	f000 80a3 	beq.w	8000ede <_printf_i+0x16e>
 8000d98:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8000d9c:	f884 7042 	strb.w	r7, [r4, #66]	; 0x42
 8000da0:	e03a      	b.n	8000e18 <_printf_i+0xa8>
 8000da2:	f1a7 0363 	sub.w	r3, r7, #99	; 0x63
 8000da6:	2b15      	cmp	r3, #21
 8000da8:	d8f6      	bhi.n	8000d98 <_printf_i+0x28>
 8000daa:	a101      	add	r1, pc, #4	; (adr r1, 8000db0 <_printf_i+0x40>)
 8000dac:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 8000db0:	08000e09 	.word	0x08000e09
 8000db4:	08000e1d 	.word	0x08000e1d
 8000db8:	08000d99 	.word	0x08000d99
 8000dbc:	08000d99 	.word	0x08000d99
 8000dc0:	08000d99 	.word	0x08000d99
 8000dc4:	08000d99 	.word	0x08000d99
 8000dc8:	08000e1d 	.word	0x08000e1d
 8000dcc:	08000d99 	.word	0x08000d99
 8000dd0:	08000d99 	.word	0x08000d99
 8000dd4:	08000d99 	.word	0x08000d99
 8000dd8:	08000d99 	.word	0x08000d99
 8000ddc:	08000f29 	.word	0x08000f29
 8000de0:	08000e4d 	.word	0x08000e4d
 8000de4:	08000f0b 	.word	0x08000f0b
 8000de8:	08000d99 	.word	0x08000d99
 8000dec:	08000d99 	.word	0x08000d99
 8000df0:	08000f4b 	.word	0x08000f4b
 8000df4:	08000d99 	.word	0x08000d99
 8000df8:	08000e4d 	.word	0x08000e4d
 8000dfc:	08000d99 	.word	0x08000d99
 8000e00:	08000d99 	.word	0x08000d99
 8000e04:	08000f13 	.word	0x08000f13
 8000e08:	682b      	ldr	r3, [r5, #0]
 8000e0a:	1d1a      	adds	r2, r3, #4
 8000e0c:	681b      	ldr	r3, [r3, #0]
 8000e0e:	602a      	str	r2, [r5, #0]
 8000e10:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8000e14:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 8000e18:	2301      	movs	r3, #1
 8000e1a:	e0a3      	b.n	8000f64 <_printf_i+0x1f4>
 8000e1c:	6820      	ldr	r0, [r4, #0]
 8000e1e:	6829      	ldr	r1, [r5, #0]
 8000e20:	0606      	lsls	r6, r0, #24
 8000e22:	f101 0304 	add.w	r3, r1, #4
 8000e26:	d50a      	bpl.n	8000e3e <_printf_i+0xce>
 8000e28:	680e      	ldr	r6, [r1, #0]
 8000e2a:	602b      	str	r3, [r5, #0]
 8000e2c:	2e00      	cmp	r6, #0
 8000e2e:	da03      	bge.n	8000e38 <_printf_i+0xc8>
 8000e30:	232d      	movs	r3, #45	; 0x2d
 8000e32:	4276      	negs	r6, r6
 8000e34:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8000e38:	485e      	ldr	r0, [pc, #376]	; (8000fb4 <_printf_i+0x244>)
 8000e3a:	230a      	movs	r3, #10
 8000e3c:	e019      	b.n	8000e72 <_printf_i+0x102>
 8000e3e:	680e      	ldr	r6, [r1, #0]
 8000e40:	602b      	str	r3, [r5, #0]
 8000e42:	f010 0f40 	tst.w	r0, #64	; 0x40
 8000e46:	bf18      	it	ne
 8000e48:	b236      	sxthne	r6, r6
 8000e4a:	e7ef      	b.n	8000e2c <_printf_i+0xbc>
 8000e4c:	682b      	ldr	r3, [r5, #0]
 8000e4e:	6820      	ldr	r0, [r4, #0]
 8000e50:	1d19      	adds	r1, r3, #4
 8000e52:	6029      	str	r1, [r5, #0]
 8000e54:	0601      	lsls	r1, r0, #24
 8000e56:	d501      	bpl.n	8000e5c <_printf_i+0xec>
 8000e58:	681e      	ldr	r6, [r3, #0]
 8000e5a:	e002      	b.n	8000e62 <_printf_i+0xf2>
 8000e5c:	0646      	lsls	r6, r0, #25
 8000e5e:	d5fb      	bpl.n	8000e58 <_printf_i+0xe8>
 8000e60:	881e      	ldrh	r6, [r3, #0]
 8000e62:	4854      	ldr	r0, [pc, #336]	; (8000fb4 <_printf_i+0x244>)
 8000e64:	2f6f      	cmp	r7, #111	; 0x6f
 8000e66:	bf0c      	ite	eq
 8000e68:	2308      	moveq	r3, #8
 8000e6a:	230a      	movne	r3, #10
 8000e6c:	2100      	movs	r1, #0
 8000e6e:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
 8000e72:	6865      	ldr	r5, [r4, #4]
 8000e74:	60a5      	str	r5, [r4, #8]
 8000e76:	2d00      	cmp	r5, #0
 8000e78:	bfa2      	ittt	ge
 8000e7a:	6821      	ldrge	r1, [r4, #0]
 8000e7c:	f021 0104 	bicge.w	r1, r1, #4
 8000e80:	6021      	strge	r1, [r4, #0]
 8000e82:	b90e      	cbnz	r6, 8000e88 <_printf_i+0x118>
 8000e84:	2d00      	cmp	r5, #0
 8000e86:	d04d      	beq.n	8000f24 <_printf_i+0x1b4>
 8000e88:	4615      	mov	r5, r2
 8000e8a:	fbb6 f1f3 	udiv	r1, r6, r3
 8000e8e:	fb03 6711 	mls	r7, r3, r1, r6
 8000e92:	5dc7      	ldrb	r7, [r0, r7]
 8000e94:	f805 7d01 	strb.w	r7, [r5, #-1]!
 8000e98:	4637      	mov	r7, r6
 8000e9a:	42bb      	cmp	r3, r7
 8000e9c:	460e      	mov	r6, r1
 8000e9e:	d9f4      	bls.n	8000e8a <_printf_i+0x11a>
 8000ea0:	2b08      	cmp	r3, #8
 8000ea2:	d10b      	bne.n	8000ebc <_printf_i+0x14c>
 8000ea4:	6823      	ldr	r3, [r4, #0]
 8000ea6:	07de      	lsls	r6, r3, #31
 8000ea8:	d508      	bpl.n	8000ebc <_printf_i+0x14c>
 8000eaa:	6923      	ldr	r3, [r4, #16]
 8000eac:	6861      	ldr	r1, [r4, #4]
 8000eae:	4299      	cmp	r1, r3
 8000eb0:	bfde      	ittt	le
 8000eb2:	2330      	movle	r3, #48	; 0x30
 8000eb4:	f805 3c01 	strble.w	r3, [r5, #-1]
 8000eb8:	f105 35ff 	addle.w	r5, r5, #4294967295
 8000ebc:	1b52      	subs	r2, r2, r5
 8000ebe:	6122      	str	r2, [r4, #16]
 8000ec0:	f8cd a000 	str.w	sl, [sp]
 8000ec4:	464b      	mov	r3, r9
 8000ec6:	aa03      	add	r2, sp, #12
 8000ec8:	4621      	mov	r1, r4
 8000eca:	4640      	mov	r0, r8
 8000ecc:	f7ff fee2 	bl	8000c94 <_printf_common>
 8000ed0:	3001      	adds	r0, #1
 8000ed2:	d14c      	bne.n	8000f6e <_printf_i+0x1fe>
 8000ed4:	f04f 30ff 	mov.w	r0, #4294967295
 8000ed8:	b004      	add	sp, #16
 8000eda:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000ede:	4835      	ldr	r0, [pc, #212]	; (8000fb4 <_printf_i+0x244>)
 8000ee0:	f881 7045 	strb.w	r7, [r1, #69]	; 0x45
 8000ee4:	6829      	ldr	r1, [r5, #0]
 8000ee6:	6823      	ldr	r3, [r4, #0]
 8000ee8:	f851 6b04 	ldr.w	r6, [r1], #4
 8000eec:	6029      	str	r1, [r5, #0]
 8000eee:	061d      	lsls	r5, r3, #24
 8000ef0:	d514      	bpl.n	8000f1c <_printf_i+0x1ac>
 8000ef2:	07df      	lsls	r7, r3, #31
 8000ef4:	bf44      	itt	mi
 8000ef6:	f043 0320 	orrmi.w	r3, r3, #32
 8000efa:	6023      	strmi	r3, [r4, #0]
 8000efc:	b91e      	cbnz	r6, 8000f06 <_printf_i+0x196>
 8000efe:	6823      	ldr	r3, [r4, #0]
 8000f00:	f023 0320 	bic.w	r3, r3, #32
 8000f04:	6023      	str	r3, [r4, #0]
 8000f06:	2310      	movs	r3, #16
 8000f08:	e7b0      	b.n	8000e6c <_printf_i+0xfc>
 8000f0a:	6823      	ldr	r3, [r4, #0]
 8000f0c:	f043 0320 	orr.w	r3, r3, #32
 8000f10:	6023      	str	r3, [r4, #0]
 8000f12:	2378      	movs	r3, #120	; 0x78
 8000f14:	4828      	ldr	r0, [pc, #160]	; (8000fb8 <_printf_i+0x248>)
 8000f16:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
 8000f1a:	e7e3      	b.n	8000ee4 <_printf_i+0x174>
 8000f1c:	0659      	lsls	r1, r3, #25
 8000f1e:	bf48      	it	mi
 8000f20:	b2b6      	uxthmi	r6, r6
 8000f22:	e7e6      	b.n	8000ef2 <_printf_i+0x182>
 8000f24:	4615      	mov	r5, r2
 8000f26:	e7bb      	b.n	8000ea0 <_printf_i+0x130>
 8000f28:	682b      	ldr	r3, [r5, #0]
 8000f2a:	6826      	ldr	r6, [r4, #0]
 8000f2c:	6961      	ldr	r1, [r4, #20]
 8000f2e:	1d18      	adds	r0, r3, #4
 8000f30:	6028      	str	r0, [r5, #0]
 8000f32:	0635      	lsls	r5, r6, #24
 8000f34:	681b      	ldr	r3, [r3, #0]
 8000f36:	d501      	bpl.n	8000f3c <_printf_i+0x1cc>
 8000f38:	6019      	str	r1, [r3, #0]
 8000f3a:	e002      	b.n	8000f42 <_printf_i+0x1d2>
 8000f3c:	0670      	lsls	r0, r6, #25
 8000f3e:	d5fb      	bpl.n	8000f38 <_printf_i+0x1c8>
 8000f40:	8019      	strh	r1, [r3, #0]
 8000f42:	2300      	movs	r3, #0
 8000f44:	6123      	str	r3, [r4, #16]
 8000f46:	4615      	mov	r5, r2
 8000f48:	e7ba      	b.n	8000ec0 <_printf_i+0x150>
 8000f4a:	682b      	ldr	r3, [r5, #0]
 8000f4c:	1d1a      	adds	r2, r3, #4
 8000f4e:	602a      	str	r2, [r5, #0]
 8000f50:	681d      	ldr	r5, [r3, #0]
 8000f52:	6862      	ldr	r2, [r4, #4]
 8000f54:	2100      	movs	r1, #0
 8000f56:	4628      	mov	r0, r5
 8000f58:	f7ff f942 	bl	80001e0 <memchr>
 8000f5c:	b108      	cbz	r0, 8000f62 <_printf_i+0x1f2>
 8000f5e:	1b40      	subs	r0, r0, r5
 8000f60:	6060      	str	r0, [r4, #4]
 8000f62:	6863      	ldr	r3, [r4, #4]
 8000f64:	6123      	str	r3, [r4, #16]
 8000f66:	2300      	movs	r3, #0
 8000f68:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8000f6c:	e7a8      	b.n	8000ec0 <_printf_i+0x150>
 8000f6e:	6923      	ldr	r3, [r4, #16]
 8000f70:	462a      	mov	r2, r5
 8000f72:	4649      	mov	r1, r9
 8000f74:	4640      	mov	r0, r8
 8000f76:	47d0      	blx	sl
 8000f78:	3001      	adds	r0, #1
 8000f7a:	d0ab      	beq.n	8000ed4 <_printf_i+0x164>
 8000f7c:	6823      	ldr	r3, [r4, #0]
 8000f7e:	079b      	lsls	r3, r3, #30
 8000f80:	d413      	bmi.n	8000faa <_printf_i+0x23a>
 8000f82:	68e0      	ldr	r0, [r4, #12]
 8000f84:	9b03      	ldr	r3, [sp, #12]
 8000f86:	4298      	cmp	r0, r3
 8000f88:	bfb8      	it	lt
 8000f8a:	4618      	movlt	r0, r3
 8000f8c:	e7a4      	b.n	8000ed8 <_printf_i+0x168>
 8000f8e:	2301      	movs	r3, #1
 8000f90:	4632      	mov	r2, r6
 8000f92:	4649      	mov	r1, r9
 8000f94:	4640      	mov	r0, r8
 8000f96:	47d0      	blx	sl
 8000f98:	3001      	adds	r0, #1
 8000f9a:	d09b      	beq.n	8000ed4 <_printf_i+0x164>
 8000f9c:	3501      	adds	r5, #1
 8000f9e:	68e3      	ldr	r3, [r4, #12]
 8000fa0:	9903      	ldr	r1, [sp, #12]
 8000fa2:	1a5b      	subs	r3, r3, r1
 8000fa4:	42ab      	cmp	r3, r5
 8000fa6:	dcf2      	bgt.n	8000f8e <_printf_i+0x21e>
 8000fa8:	e7eb      	b.n	8000f82 <_printf_i+0x212>
 8000faa:	2500      	movs	r5, #0
 8000fac:	f104 0619 	add.w	r6, r4, #25
 8000fb0:	e7f5      	b.n	8000f9e <_printf_i+0x22e>
 8000fb2:	bf00      	nop
 8000fb4:	08001661 	.word	0x08001661
 8000fb8:	08001672 	.word	0x08001672

08000fbc <_sbrk_r>:
 8000fbc:	b538      	push	{r3, r4, r5, lr}
 8000fbe:	4d06      	ldr	r5, [pc, #24]	; (8000fd8 <_sbrk_r+0x1c>)
 8000fc0:	2300      	movs	r3, #0
 8000fc2:	4604      	mov	r4, r0
 8000fc4:	4608      	mov	r0, r1
 8000fc6:	602b      	str	r3, [r5, #0]
 8000fc8:	f7ff fad4 	bl	8000574 <_sbrk>
 8000fcc:	1c43      	adds	r3, r0, #1
 8000fce:	d102      	bne.n	8000fd6 <_sbrk_r+0x1a>
 8000fd0:	682b      	ldr	r3, [r5, #0]
 8000fd2:	b103      	cbz	r3, 8000fd6 <_sbrk_r+0x1a>
 8000fd4:	6023      	str	r3, [r4, #0]
 8000fd6:	bd38      	pop	{r3, r4, r5, pc}
 8000fd8:	20000090 	.word	0x20000090

08000fdc <__sread>:
 8000fdc:	b510      	push	{r4, lr}
 8000fde:	460c      	mov	r4, r1
 8000fe0:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000fe4:	f000 fab2 	bl	800154c <_read_r>
 8000fe8:	2800      	cmp	r0, #0
 8000fea:	bfab      	itete	ge
 8000fec:	6d63      	ldrge	r3, [r4, #84]	; 0x54
 8000fee:	89a3      	ldrhlt	r3, [r4, #12]
 8000ff0:	181b      	addge	r3, r3, r0
 8000ff2:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 8000ff6:	bfac      	ite	ge
 8000ff8:	6563      	strge	r3, [r4, #84]	; 0x54
 8000ffa:	81a3      	strhlt	r3, [r4, #12]
 8000ffc:	bd10      	pop	{r4, pc}

08000ffe <__swrite>:
 8000ffe:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8001002:	461f      	mov	r7, r3
 8001004:	898b      	ldrh	r3, [r1, #12]
 8001006:	05db      	lsls	r3, r3, #23
 8001008:	4605      	mov	r5, r0
 800100a:	460c      	mov	r4, r1
 800100c:	4616      	mov	r6, r2
 800100e:	d505      	bpl.n	800101c <__swrite+0x1e>
 8001010:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8001014:	2302      	movs	r3, #2
 8001016:	2200      	movs	r2, #0
 8001018:	f000 f9c8 	bl	80013ac <_lseek_r>
 800101c:	89a3      	ldrh	r3, [r4, #12]
 800101e:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8001022:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 8001026:	81a3      	strh	r3, [r4, #12]
 8001028:	4632      	mov	r2, r6
 800102a:	463b      	mov	r3, r7
 800102c:	4628      	mov	r0, r5
 800102e:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8001032:	f000 b869 	b.w	8001108 <_write_r>

08001036 <__sseek>:
 8001036:	b510      	push	{r4, lr}
 8001038:	460c      	mov	r4, r1
 800103a:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800103e:	f000 f9b5 	bl	80013ac <_lseek_r>
 8001042:	1c43      	adds	r3, r0, #1
 8001044:	89a3      	ldrh	r3, [r4, #12]
 8001046:	bf15      	itete	ne
 8001048:	6560      	strne	r0, [r4, #84]	; 0x54
 800104a:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 800104e:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 8001052:	81a3      	strheq	r3, [r4, #12]
 8001054:	bf18      	it	ne
 8001056:	81a3      	strhne	r3, [r4, #12]
 8001058:	bd10      	pop	{r4, pc}

0800105a <__sclose>:
 800105a:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800105e:	f000 b8d3 	b.w	8001208 <_close_r>
	...

08001064 <__swbuf_r>:
 8001064:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8001066:	460e      	mov	r6, r1
 8001068:	4614      	mov	r4, r2
 800106a:	4605      	mov	r5, r0
 800106c:	b118      	cbz	r0, 8001076 <__swbuf_r+0x12>
 800106e:	6983      	ldr	r3, [r0, #24]
 8001070:	b90b      	cbnz	r3, 8001076 <__swbuf_r+0x12>
 8001072:	f7ff fb81 	bl	8000778 <__sinit>
 8001076:	4b21      	ldr	r3, [pc, #132]	; (80010fc <__swbuf_r+0x98>)
 8001078:	429c      	cmp	r4, r3
 800107a:	d12b      	bne.n	80010d4 <__swbuf_r+0x70>
 800107c:	686c      	ldr	r4, [r5, #4]
 800107e:	69a3      	ldr	r3, [r4, #24]
 8001080:	60a3      	str	r3, [r4, #8]
 8001082:	89a3      	ldrh	r3, [r4, #12]
 8001084:	071a      	lsls	r2, r3, #28
 8001086:	d52f      	bpl.n	80010e8 <__swbuf_r+0x84>
 8001088:	6923      	ldr	r3, [r4, #16]
 800108a:	b36b      	cbz	r3, 80010e8 <__swbuf_r+0x84>
 800108c:	6923      	ldr	r3, [r4, #16]
 800108e:	6820      	ldr	r0, [r4, #0]
 8001090:	1ac0      	subs	r0, r0, r3
 8001092:	6963      	ldr	r3, [r4, #20]
 8001094:	b2f6      	uxtb	r6, r6
 8001096:	4283      	cmp	r3, r0
 8001098:	4637      	mov	r7, r6
 800109a:	dc04      	bgt.n	80010a6 <__swbuf_r+0x42>
 800109c:	4621      	mov	r1, r4
 800109e:	4628      	mov	r0, r5
 80010a0:	f000 f948 	bl	8001334 <_fflush_r>
 80010a4:	bb30      	cbnz	r0, 80010f4 <__swbuf_r+0x90>
 80010a6:	68a3      	ldr	r3, [r4, #8]
 80010a8:	3b01      	subs	r3, #1
 80010aa:	60a3      	str	r3, [r4, #8]
 80010ac:	6823      	ldr	r3, [r4, #0]
 80010ae:	1c5a      	adds	r2, r3, #1
 80010b0:	6022      	str	r2, [r4, #0]
 80010b2:	701e      	strb	r6, [r3, #0]
 80010b4:	6963      	ldr	r3, [r4, #20]
 80010b6:	3001      	adds	r0, #1
 80010b8:	4283      	cmp	r3, r0
 80010ba:	d004      	beq.n	80010c6 <__swbuf_r+0x62>
 80010bc:	89a3      	ldrh	r3, [r4, #12]
 80010be:	07db      	lsls	r3, r3, #31
 80010c0:	d506      	bpl.n	80010d0 <__swbuf_r+0x6c>
 80010c2:	2e0a      	cmp	r6, #10
 80010c4:	d104      	bne.n	80010d0 <__swbuf_r+0x6c>
 80010c6:	4621      	mov	r1, r4
 80010c8:	4628      	mov	r0, r5
 80010ca:	f000 f933 	bl	8001334 <_fflush_r>
 80010ce:	b988      	cbnz	r0, 80010f4 <__swbuf_r+0x90>
 80010d0:	4638      	mov	r0, r7
 80010d2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80010d4:	4b0a      	ldr	r3, [pc, #40]	; (8001100 <__swbuf_r+0x9c>)
 80010d6:	429c      	cmp	r4, r3
 80010d8:	d101      	bne.n	80010de <__swbuf_r+0x7a>
 80010da:	68ac      	ldr	r4, [r5, #8]
 80010dc:	e7cf      	b.n	800107e <__swbuf_r+0x1a>
 80010de:	4b09      	ldr	r3, [pc, #36]	; (8001104 <__swbuf_r+0xa0>)
 80010e0:	429c      	cmp	r4, r3
 80010e2:	bf08      	it	eq
 80010e4:	68ec      	ldreq	r4, [r5, #12]
 80010e6:	e7ca      	b.n	800107e <__swbuf_r+0x1a>
 80010e8:	4621      	mov	r1, r4
 80010ea:	4628      	mov	r0, r5
 80010ec:	f000 f81e 	bl	800112c <__swsetup_r>
 80010f0:	2800      	cmp	r0, #0
 80010f2:	d0cb      	beq.n	800108c <__swbuf_r+0x28>
 80010f4:	f04f 37ff 	mov.w	r7, #4294967295
 80010f8:	e7ea      	b.n	80010d0 <__swbuf_r+0x6c>
 80010fa:	bf00      	nop
 80010fc:	08001610 	.word	0x08001610
 8001100:	08001630 	.word	0x08001630
 8001104:	080015f0 	.word	0x080015f0

08001108 <_write_r>:
 8001108:	b538      	push	{r3, r4, r5, lr}
 800110a:	4d07      	ldr	r5, [pc, #28]	; (8001128 <_write_r+0x20>)
 800110c:	4604      	mov	r4, r0
 800110e:	4608      	mov	r0, r1
 8001110:	4611      	mov	r1, r2
 8001112:	2200      	movs	r2, #0
 8001114:	602a      	str	r2, [r5, #0]
 8001116:	461a      	mov	r2, r3
 8001118:	f7ff f9dc 	bl	80004d4 <_write>
 800111c:	1c43      	adds	r3, r0, #1
 800111e:	d102      	bne.n	8001126 <_write_r+0x1e>
 8001120:	682b      	ldr	r3, [r5, #0]
 8001122:	b103      	cbz	r3, 8001126 <_write_r+0x1e>
 8001124:	6023      	str	r3, [r4, #0]
 8001126:	bd38      	pop	{r3, r4, r5, pc}
 8001128:	20000090 	.word	0x20000090

0800112c <__swsetup_r>:
 800112c:	4b32      	ldr	r3, [pc, #200]	; (80011f8 <__swsetup_r+0xcc>)
 800112e:	b570      	push	{r4, r5, r6, lr}
 8001130:	681d      	ldr	r5, [r3, #0]
 8001132:	4606      	mov	r6, r0
 8001134:	460c      	mov	r4, r1
 8001136:	b125      	cbz	r5, 8001142 <__swsetup_r+0x16>
 8001138:	69ab      	ldr	r3, [r5, #24]
 800113a:	b913      	cbnz	r3, 8001142 <__swsetup_r+0x16>
 800113c:	4628      	mov	r0, r5
 800113e:	f7ff fb1b 	bl	8000778 <__sinit>
 8001142:	4b2e      	ldr	r3, [pc, #184]	; (80011fc <__swsetup_r+0xd0>)
 8001144:	429c      	cmp	r4, r3
 8001146:	d10f      	bne.n	8001168 <__swsetup_r+0x3c>
 8001148:	686c      	ldr	r4, [r5, #4]
 800114a:	89a3      	ldrh	r3, [r4, #12]
 800114c:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8001150:	0719      	lsls	r1, r3, #28
 8001152:	d42c      	bmi.n	80011ae <__swsetup_r+0x82>
 8001154:	06dd      	lsls	r5, r3, #27
 8001156:	d411      	bmi.n	800117c <__swsetup_r+0x50>
 8001158:	2309      	movs	r3, #9
 800115a:	6033      	str	r3, [r6, #0]
 800115c:	f042 0340 	orr.w	r3, r2, #64	; 0x40
 8001160:	81a3      	strh	r3, [r4, #12]
 8001162:	f04f 30ff 	mov.w	r0, #4294967295
 8001166:	e03e      	b.n	80011e6 <__swsetup_r+0xba>
 8001168:	4b25      	ldr	r3, [pc, #148]	; (8001200 <__swsetup_r+0xd4>)
 800116a:	429c      	cmp	r4, r3
 800116c:	d101      	bne.n	8001172 <__swsetup_r+0x46>
 800116e:	68ac      	ldr	r4, [r5, #8]
 8001170:	e7eb      	b.n	800114a <__swsetup_r+0x1e>
 8001172:	4b24      	ldr	r3, [pc, #144]	; (8001204 <__swsetup_r+0xd8>)
 8001174:	429c      	cmp	r4, r3
 8001176:	bf08      	it	eq
 8001178:	68ec      	ldreq	r4, [r5, #12]
 800117a:	e7e6      	b.n	800114a <__swsetup_r+0x1e>
 800117c:	0758      	lsls	r0, r3, #29
 800117e:	d512      	bpl.n	80011a6 <__swsetup_r+0x7a>
 8001180:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8001182:	b141      	cbz	r1, 8001196 <__swsetup_r+0x6a>
 8001184:	f104 0344 	add.w	r3, r4, #68	; 0x44
 8001188:	4299      	cmp	r1, r3
 800118a:	d002      	beq.n	8001192 <__swsetup_r+0x66>
 800118c:	4630      	mov	r0, r6
 800118e:	f000 f991 	bl	80014b4 <_free_r>
 8001192:	2300      	movs	r3, #0
 8001194:	6363      	str	r3, [r4, #52]	; 0x34
 8001196:	89a3      	ldrh	r3, [r4, #12]
 8001198:	f023 0324 	bic.w	r3, r3, #36	; 0x24
 800119c:	81a3      	strh	r3, [r4, #12]
 800119e:	2300      	movs	r3, #0
 80011a0:	6063      	str	r3, [r4, #4]
 80011a2:	6923      	ldr	r3, [r4, #16]
 80011a4:	6023      	str	r3, [r4, #0]
 80011a6:	89a3      	ldrh	r3, [r4, #12]
 80011a8:	f043 0308 	orr.w	r3, r3, #8
 80011ac:	81a3      	strh	r3, [r4, #12]
 80011ae:	6923      	ldr	r3, [r4, #16]
 80011b0:	b94b      	cbnz	r3, 80011c6 <__swsetup_r+0x9a>
 80011b2:	89a3      	ldrh	r3, [r4, #12]
 80011b4:	f403 7320 	and.w	r3, r3, #640	; 0x280
 80011b8:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 80011bc:	d003      	beq.n	80011c6 <__swsetup_r+0x9a>
 80011be:	4621      	mov	r1, r4
 80011c0:	4630      	mov	r0, r6
 80011c2:	f000 f92b 	bl	800141c <__smakebuf_r>
 80011c6:	89a0      	ldrh	r0, [r4, #12]
 80011c8:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 80011cc:	f010 0301 	ands.w	r3, r0, #1
 80011d0:	d00a      	beq.n	80011e8 <__swsetup_r+0xbc>
 80011d2:	2300      	movs	r3, #0
 80011d4:	60a3      	str	r3, [r4, #8]
 80011d6:	6963      	ldr	r3, [r4, #20]
 80011d8:	425b      	negs	r3, r3
 80011da:	61a3      	str	r3, [r4, #24]
 80011dc:	6923      	ldr	r3, [r4, #16]
 80011de:	b943      	cbnz	r3, 80011f2 <__swsetup_r+0xc6>
 80011e0:	f010 0080 	ands.w	r0, r0, #128	; 0x80
 80011e4:	d1ba      	bne.n	800115c <__swsetup_r+0x30>
 80011e6:	bd70      	pop	{r4, r5, r6, pc}
 80011e8:	0781      	lsls	r1, r0, #30
 80011ea:	bf58      	it	pl
 80011ec:	6963      	ldrpl	r3, [r4, #20]
 80011ee:	60a3      	str	r3, [r4, #8]
 80011f0:	e7f4      	b.n	80011dc <__swsetup_r+0xb0>
 80011f2:	2000      	movs	r0, #0
 80011f4:	e7f7      	b.n	80011e6 <__swsetup_r+0xba>
 80011f6:	bf00      	nop
 80011f8:	20000000 	.word	0x20000000
 80011fc:	08001610 	.word	0x08001610
 8001200:	08001630 	.word	0x08001630
 8001204:	080015f0 	.word	0x080015f0

08001208 <_close_r>:
 8001208:	b538      	push	{r3, r4, r5, lr}
 800120a:	4d06      	ldr	r5, [pc, #24]	; (8001224 <_close_r+0x1c>)
 800120c:	2300      	movs	r3, #0
 800120e:	4604      	mov	r4, r0
 8001210:	4608      	mov	r0, r1
 8001212:	602b      	str	r3, [r5, #0]
 8001214:	f7ff f97a 	bl	800050c <_close>
 8001218:	1c43      	adds	r3, r0, #1
 800121a:	d102      	bne.n	8001222 <_close_r+0x1a>
 800121c:	682b      	ldr	r3, [r5, #0]
 800121e:	b103      	cbz	r3, 8001222 <_close_r+0x1a>
 8001220:	6023      	str	r3, [r4, #0]
 8001222:	bd38      	pop	{r3, r4, r5, pc}
 8001224:	20000090 	.word	0x20000090

08001228 <__sflush_r>:
 8001228:	898a      	ldrh	r2, [r1, #12]
 800122a:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800122e:	4605      	mov	r5, r0
 8001230:	0710      	lsls	r0, r2, #28
 8001232:	460c      	mov	r4, r1
 8001234:	d458      	bmi.n	80012e8 <__sflush_r+0xc0>
 8001236:	684b      	ldr	r3, [r1, #4]
 8001238:	2b00      	cmp	r3, #0
 800123a:	dc05      	bgt.n	8001248 <__sflush_r+0x20>
 800123c:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 800123e:	2b00      	cmp	r3, #0
 8001240:	dc02      	bgt.n	8001248 <__sflush_r+0x20>
 8001242:	2000      	movs	r0, #0
 8001244:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8001248:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 800124a:	2e00      	cmp	r6, #0
 800124c:	d0f9      	beq.n	8001242 <__sflush_r+0x1a>
 800124e:	2300      	movs	r3, #0
 8001250:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 8001254:	682f      	ldr	r7, [r5, #0]
 8001256:	602b      	str	r3, [r5, #0]
 8001258:	d032      	beq.n	80012c0 <__sflush_r+0x98>
 800125a:	6d60      	ldr	r0, [r4, #84]	; 0x54
 800125c:	89a3      	ldrh	r3, [r4, #12]
 800125e:	075a      	lsls	r2, r3, #29
 8001260:	d505      	bpl.n	800126e <__sflush_r+0x46>
 8001262:	6863      	ldr	r3, [r4, #4]
 8001264:	1ac0      	subs	r0, r0, r3
 8001266:	6b63      	ldr	r3, [r4, #52]	; 0x34
 8001268:	b10b      	cbz	r3, 800126e <__sflush_r+0x46>
 800126a:	6c23      	ldr	r3, [r4, #64]	; 0x40
 800126c:	1ac0      	subs	r0, r0, r3
 800126e:	2300      	movs	r3, #0
 8001270:	4602      	mov	r2, r0
 8001272:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 8001274:	6a21      	ldr	r1, [r4, #32]
 8001276:	4628      	mov	r0, r5
 8001278:	47b0      	blx	r6
 800127a:	1c43      	adds	r3, r0, #1
 800127c:	89a3      	ldrh	r3, [r4, #12]
 800127e:	d106      	bne.n	800128e <__sflush_r+0x66>
 8001280:	6829      	ldr	r1, [r5, #0]
 8001282:	291d      	cmp	r1, #29
 8001284:	d82c      	bhi.n	80012e0 <__sflush_r+0xb8>
 8001286:	4a2a      	ldr	r2, [pc, #168]	; (8001330 <__sflush_r+0x108>)
 8001288:	40ca      	lsrs	r2, r1
 800128a:	07d6      	lsls	r6, r2, #31
 800128c:	d528      	bpl.n	80012e0 <__sflush_r+0xb8>
 800128e:	2200      	movs	r2, #0
 8001290:	6062      	str	r2, [r4, #4]
 8001292:	04d9      	lsls	r1, r3, #19
 8001294:	6922      	ldr	r2, [r4, #16]
 8001296:	6022      	str	r2, [r4, #0]
 8001298:	d504      	bpl.n	80012a4 <__sflush_r+0x7c>
 800129a:	1c42      	adds	r2, r0, #1
 800129c:	d101      	bne.n	80012a2 <__sflush_r+0x7a>
 800129e:	682b      	ldr	r3, [r5, #0]
 80012a0:	b903      	cbnz	r3, 80012a4 <__sflush_r+0x7c>
 80012a2:	6560      	str	r0, [r4, #84]	; 0x54
 80012a4:	6b61      	ldr	r1, [r4, #52]	; 0x34
 80012a6:	602f      	str	r7, [r5, #0]
 80012a8:	2900      	cmp	r1, #0
 80012aa:	d0ca      	beq.n	8001242 <__sflush_r+0x1a>
 80012ac:	f104 0344 	add.w	r3, r4, #68	; 0x44
 80012b0:	4299      	cmp	r1, r3
 80012b2:	d002      	beq.n	80012ba <__sflush_r+0x92>
 80012b4:	4628      	mov	r0, r5
 80012b6:	f000 f8fd 	bl	80014b4 <_free_r>
 80012ba:	2000      	movs	r0, #0
 80012bc:	6360      	str	r0, [r4, #52]	; 0x34
 80012be:	e7c1      	b.n	8001244 <__sflush_r+0x1c>
 80012c0:	6a21      	ldr	r1, [r4, #32]
 80012c2:	2301      	movs	r3, #1
 80012c4:	4628      	mov	r0, r5
 80012c6:	47b0      	blx	r6
 80012c8:	1c41      	adds	r1, r0, #1
 80012ca:	d1c7      	bne.n	800125c <__sflush_r+0x34>
 80012cc:	682b      	ldr	r3, [r5, #0]
 80012ce:	2b00      	cmp	r3, #0
 80012d0:	d0c4      	beq.n	800125c <__sflush_r+0x34>
 80012d2:	2b1d      	cmp	r3, #29
 80012d4:	d001      	beq.n	80012da <__sflush_r+0xb2>
 80012d6:	2b16      	cmp	r3, #22
 80012d8:	d101      	bne.n	80012de <__sflush_r+0xb6>
 80012da:	602f      	str	r7, [r5, #0]
 80012dc:	e7b1      	b.n	8001242 <__sflush_r+0x1a>
 80012de:	89a3      	ldrh	r3, [r4, #12]
 80012e0:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 80012e4:	81a3      	strh	r3, [r4, #12]
 80012e6:	e7ad      	b.n	8001244 <__sflush_r+0x1c>
 80012e8:	690f      	ldr	r7, [r1, #16]
 80012ea:	2f00      	cmp	r7, #0
 80012ec:	d0a9      	beq.n	8001242 <__sflush_r+0x1a>
 80012ee:	0793      	lsls	r3, r2, #30
 80012f0:	680e      	ldr	r6, [r1, #0]
 80012f2:	bf08      	it	eq
 80012f4:	694b      	ldreq	r3, [r1, #20]
 80012f6:	600f      	str	r7, [r1, #0]
 80012f8:	bf18      	it	ne
 80012fa:	2300      	movne	r3, #0
 80012fc:	eba6 0807 	sub.w	r8, r6, r7
 8001300:	608b      	str	r3, [r1, #8]
 8001302:	f1b8 0f00 	cmp.w	r8, #0
 8001306:	dd9c      	ble.n	8001242 <__sflush_r+0x1a>
 8001308:	6a21      	ldr	r1, [r4, #32]
 800130a:	6aa6      	ldr	r6, [r4, #40]	; 0x28
 800130c:	4643      	mov	r3, r8
 800130e:	463a      	mov	r2, r7
 8001310:	4628      	mov	r0, r5
 8001312:	47b0      	blx	r6
 8001314:	2800      	cmp	r0, #0
 8001316:	dc06      	bgt.n	8001326 <__sflush_r+0xfe>
 8001318:	89a3      	ldrh	r3, [r4, #12]
 800131a:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 800131e:	81a3      	strh	r3, [r4, #12]
 8001320:	f04f 30ff 	mov.w	r0, #4294967295
 8001324:	e78e      	b.n	8001244 <__sflush_r+0x1c>
 8001326:	4407      	add	r7, r0
 8001328:	eba8 0800 	sub.w	r8, r8, r0
 800132c:	e7e9      	b.n	8001302 <__sflush_r+0xda>
 800132e:	bf00      	nop
 8001330:	20400001 	.word	0x20400001

08001334 <_fflush_r>:
 8001334:	b538      	push	{r3, r4, r5, lr}
 8001336:	690b      	ldr	r3, [r1, #16]
 8001338:	4605      	mov	r5, r0
 800133a:	460c      	mov	r4, r1
 800133c:	b913      	cbnz	r3, 8001344 <_fflush_r+0x10>
 800133e:	2500      	movs	r5, #0
 8001340:	4628      	mov	r0, r5
 8001342:	bd38      	pop	{r3, r4, r5, pc}
 8001344:	b118      	cbz	r0, 800134e <_fflush_r+0x1a>
 8001346:	6983      	ldr	r3, [r0, #24]
 8001348:	b90b      	cbnz	r3, 800134e <_fflush_r+0x1a>
 800134a:	f7ff fa15 	bl	8000778 <__sinit>
 800134e:	4b14      	ldr	r3, [pc, #80]	; (80013a0 <_fflush_r+0x6c>)
 8001350:	429c      	cmp	r4, r3
 8001352:	d11b      	bne.n	800138c <_fflush_r+0x58>
 8001354:	686c      	ldr	r4, [r5, #4]
 8001356:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 800135a:	2b00      	cmp	r3, #0
 800135c:	d0ef      	beq.n	800133e <_fflush_r+0xa>
 800135e:	6e62      	ldr	r2, [r4, #100]	; 0x64
 8001360:	07d0      	lsls	r0, r2, #31
 8001362:	d404      	bmi.n	800136e <_fflush_r+0x3a>
 8001364:	0599      	lsls	r1, r3, #22
 8001366:	d402      	bmi.n	800136e <_fflush_r+0x3a>
 8001368:	6da0      	ldr	r0, [r4, #88]	; 0x58
 800136a:	f7ff faa3 	bl	80008b4 <__retarget_lock_acquire_recursive>
 800136e:	4628      	mov	r0, r5
 8001370:	4621      	mov	r1, r4
 8001372:	f7ff ff59 	bl	8001228 <__sflush_r>
 8001376:	6e63      	ldr	r3, [r4, #100]	; 0x64
 8001378:	07da      	lsls	r2, r3, #31
 800137a:	4605      	mov	r5, r0
 800137c:	d4e0      	bmi.n	8001340 <_fflush_r+0xc>
 800137e:	89a3      	ldrh	r3, [r4, #12]
 8001380:	059b      	lsls	r3, r3, #22
 8001382:	d4dd      	bmi.n	8001340 <_fflush_r+0xc>
 8001384:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8001386:	f7ff fa96 	bl	80008b6 <__retarget_lock_release_recursive>
 800138a:	e7d9      	b.n	8001340 <_fflush_r+0xc>
 800138c:	4b05      	ldr	r3, [pc, #20]	; (80013a4 <_fflush_r+0x70>)
 800138e:	429c      	cmp	r4, r3
 8001390:	d101      	bne.n	8001396 <_fflush_r+0x62>
 8001392:	68ac      	ldr	r4, [r5, #8]
 8001394:	e7df      	b.n	8001356 <_fflush_r+0x22>
 8001396:	4b04      	ldr	r3, [pc, #16]	; (80013a8 <_fflush_r+0x74>)
 8001398:	429c      	cmp	r4, r3
 800139a:	bf08      	it	eq
 800139c:	68ec      	ldreq	r4, [r5, #12]
 800139e:	e7da      	b.n	8001356 <_fflush_r+0x22>
 80013a0:	08001610 	.word	0x08001610
 80013a4:	08001630 	.word	0x08001630
 80013a8:	080015f0 	.word	0x080015f0

080013ac <_lseek_r>:
 80013ac:	b538      	push	{r3, r4, r5, lr}
 80013ae:	4d07      	ldr	r5, [pc, #28]	; (80013cc <_lseek_r+0x20>)
 80013b0:	4604      	mov	r4, r0
 80013b2:	4608      	mov	r0, r1
 80013b4:	4611      	mov	r1, r2
 80013b6:	2200      	movs	r2, #0
 80013b8:	602a      	str	r2, [r5, #0]
 80013ba:	461a      	mov	r2, r3
 80013bc:	f7ff f8cd 	bl	800055a <_lseek>
 80013c0:	1c43      	adds	r3, r0, #1
 80013c2:	d102      	bne.n	80013ca <_lseek_r+0x1e>
 80013c4:	682b      	ldr	r3, [r5, #0]
 80013c6:	b103      	cbz	r3, 80013ca <_lseek_r+0x1e>
 80013c8:	6023      	str	r3, [r4, #0]
 80013ca:	bd38      	pop	{r3, r4, r5, pc}
 80013cc:	20000090 	.word	0x20000090

080013d0 <__swhatbuf_r>:
 80013d0:	b570      	push	{r4, r5, r6, lr}
 80013d2:	460e      	mov	r6, r1
 80013d4:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80013d8:	2900      	cmp	r1, #0
 80013da:	b096      	sub	sp, #88	; 0x58
 80013dc:	4614      	mov	r4, r2
 80013de:	461d      	mov	r5, r3
 80013e0:	da08      	bge.n	80013f4 <__swhatbuf_r+0x24>
 80013e2:	f9b6 300c 	ldrsh.w	r3, [r6, #12]
 80013e6:	2200      	movs	r2, #0
 80013e8:	602a      	str	r2, [r5, #0]
 80013ea:	061a      	lsls	r2, r3, #24
 80013ec:	d410      	bmi.n	8001410 <__swhatbuf_r+0x40>
 80013ee:	f44f 6380 	mov.w	r3, #1024	; 0x400
 80013f2:	e00e      	b.n	8001412 <__swhatbuf_r+0x42>
 80013f4:	466a      	mov	r2, sp
 80013f6:	f000 f8bb 	bl	8001570 <_fstat_r>
 80013fa:	2800      	cmp	r0, #0
 80013fc:	dbf1      	blt.n	80013e2 <__swhatbuf_r+0x12>
 80013fe:	9a01      	ldr	r2, [sp, #4]
 8001400:	f402 4270 	and.w	r2, r2, #61440	; 0xf000
 8001404:	f5a2 5300 	sub.w	r3, r2, #8192	; 0x2000
 8001408:	425a      	negs	r2, r3
 800140a:	415a      	adcs	r2, r3
 800140c:	602a      	str	r2, [r5, #0]
 800140e:	e7ee      	b.n	80013ee <__swhatbuf_r+0x1e>
 8001410:	2340      	movs	r3, #64	; 0x40
 8001412:	2000      	movs	r0, #0
 8001414:	6023      	str	r3, [r4, #0]
 8001416:	b016      	add	sp, #88	; 0x58
 8001418:	bd70      	pop	{r4, r5, r6, pc}
	...

0800141c <__smakebuf_r>:
 800141c:	898b      	ldrh	r3, [r1, #12]
 800141e:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8001420:	079d      	lsls	r5, r3, #30
 8001422:	4606      	mov	r6, r0
 8001424:	460c      	mov	r4, r1
 8001426:	d507      	bpl.n	8001438 <__smakebuf_r+0x1c>
 8001428:	f104 0347 	add.w	r3, r4, #71	; 0x47
 800142c:	6023      	str	r3, [r4, #0]
 800142e:	6123      	str	r3, [r4, #16]
 8001430:	2301      	movs	r3, #1
 8001432:	6163      	str	r3, [r4, #20]
 8001434:	b002      	add	sp, #8
 8001436:	bd70      	pop	{r4, r5, r6, pc}
 8001438:	ab01      	add	r3, sp, #4
 800143a:	466a      	mov	r2, sp
 800143c:	f7ff ffc8 	bl	80013d0 <__swhatbuf_r>
 8001440:	9900      	ldr	r1, [sp, #0]
 8001442:	4605      	mov	r5, r0
 8001444:	4630      	mov	r0, r6
 8001446:	f7ff fa57 	bl	80008f8 <_malloc_r>
 800144a:	b948      	cbnz	r0, 8001460 <__smakebuf_r+0x44>
 800144c:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8001450:	059a      	lsls	r2, r3, #22
 8001452:	d4ef      	bmi.n	8001434 <__smakebuf_r+0x18>
 8001454:	f023 0303 	bic.w	r3, r3, #3
 8001458:	f043 0302 	orr.w	r3, r3, #2
 800145c:	81a3      	strh	r3, [r4, #12]
 800145e:	e7e3      	b.n	8001428 <__smakebuf_r+0xc>
 8001460:	4b0d      	ldr	r3, [pc, #52]	; (8001498 <__smakebuf_r+0x7c>)
 8001462:	62b3      	str	r3, [r6, #40]	; 0x28
 8001464:	89a3      	ldrh	r3, [r4, #12]
 8001466:	6020      	str	r0, [r4, #0]
 8001468:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 800146c:	81a3      	strh	r3, [r4, #12]
 800146e:	9b00      	ldr	r3, [sp, #0]
 8001470:	6163      	str	r3, [r4, #20]
 8001472:	9b01      	ldr	r3, [sp, #4]
 8001474:	6120      	str	r0, [r4, #16]
 8001476:	b15b      	cbz	r3, 8001490 <__smakebuf_r+0x74>
 8001478:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 800147c:	4630      	mov	r0, r6
 800147e:	f000 f889 	bl	8001594 <_isatty_r>
 8001482:	b128      	cbz	r0, 8001490 <__smakebuf_r+0x74>
 8001484:	89a3      	ldrh	r3, [r4, #12]
 8001486:	f023 0303 	bic.w	r3, r3, #3
 800148a:	f043 0301 	orr.w	r3, r3, #1
 800148e:	81a3      	strh	r3, [r4, #12]
 8001490:	89a0      	ldrh	r0, [r4, #12]
 8001492:	4305      	orrs	r5, r0
 8001494:	81a5      	strh	r5, [r4, #12]
 8001496:	e7cd      	b.n	8001434 <__smakebuf_r+0x18>
 8001498:	08000711 	.word	0x08000711

0800149c <__malloc_lock>:
 800149c:	4801      	ldr	r0, [pc, #4]	; (80014a4 <__malloc_lock+0x8>)
 800149e:	f7ff ba09 	b.w	80008b4 <__retarget_lock_acquire_recursive>
 80014a2:	bf00      	nop
 80014a4:	20000084 	.word	0x20000084

080014a8 <__malloc_unlock>:
 80014a8:	4801      	ldr	r0, [pc, #4]	; (80014b0 <__malloc_unlock+0x8>)
 80014aa:	f7ff ba04 	b.w	80008b6 <__retarget_lock_release_recursive>
 80014ae:	bf00      	nop
 80014b0:	20000084 	.word	0x20000084

080014b4 <_free_r>:
 80014b4:	b537      	push	{r0, r1, r2, r4, r5, lr}
 80014b6:	2900      	cmp	r1, #0
 80014b8:	d044      	beq.n	8001544 <_free_r+0x90>
 80014ba:	f851 3c04 	ldr.w	r3, [r1, #-4]
 80014be:	9001      	str	r0, [sp, #4]
 80014c0:	2b00      	cmp	r3, #0
 80014c2:	f1a1 0404 	sub.w	r4, r1, #4
 80014c6:	bfb8      	it	lt
 80014c8:	18e4      	addlt	r4, r4, r3
 80014ca:	f7ff ffe7 	bl	800149c <__malloc_lock>
 80014ce:	4a1e      	ldr	r2, [pc, #120]	; (8001548 <_free_r+0x94>)
 80014d0:	9801      	ldr	r0, [sp, #4]
 80014d2:	6813      	ldr	r3, [r2, #0]
 80014d4:	b933      	cbnz	r3, 80014e4 <_free_r+0x30>
 80014d6:	6063      	str	r3, [r4, #4]
 80014d8:	6014      	str	r4, [r2, #0]
 80014da:	b003      	add	sp, #12
 80014dc:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 80014e0:	f7ff bfe2 	b.w	80014a8 <__malloc_unlock>
 80014e4:	42a3      	cmp	r3, r4
 80014e6:	d908      	bls.n	80014fa <_free_r+0x46>
 80014e8:	6825      	ldr	r5, [r4, #0]
 80014ea:	1961      	adds	r1, r4, r5
 80014ec:	428b      	cmp	r3, r1
 80014ee:	bf01      	itttt	eq
 80014f0:	6819      	ldreq	r1, [r3, #0]
 80014f2:	685b      	ldreq	r3, [r3, #4]
 80014f4:	1949      	addeq	r1, r1, r5
 80014f6:	6021      	streq	r1, [r4, #0]
 80014f8:	e7ed      	b.n	80014d6 <_free_r+0x22>
 80014fa:	461a      	mov	r2, r3
 80014fc:	685b      	ldr	r3, [r3, #4]
 80014fe:	b10b      	cbz	r3, 8001504 <_free_r+0x50>
 8001500:	42a3      	cmp	r3, r4
 8001502:	d9fa      	bls.n	80014fa <_free_r+0x46>
 8001504:	6811      	ldr	r1, [r2, #0]
 8001506:	1855      	adds	r5, r2, r1
 8001508:	42a5      	cmp	r5, r4
 800150a:	d10b      	bne.n	8001524 <_free_r+0x70>
 800150c:	6824      	ldr	r4, [r4, #0]
 800150e:	4421      	add	r1, r4
 8001510:	1854      	adds	r4, r2, r1
 8001512:	42a3      	cmp	r3, r4
 8001514:	6011      	str	r1, [r2, #0]
 8001516:	d1e0      	bne.n	80014da <_free_r+0x26>
 8001518:	681c      	ldr	r4, [r3, #0]
 800151a:	685b      	ldr	r3, [r3, #4]
 800151c:	6053      	str	r3, [r2, #4]
 800151e:	4421      	add	r1, r4
 8001520:	6011      	str	r1, [r2, #0]
 8001522:	e7da      	b.n	80014da <_free_r+0x26>
 8001524:	d902      	bls.n	800152c <_free_r+0x78>
 8001526:	230c      	movs	r3, #12
 8001528:	6003      	str	r3, [r0, #0]
 800152a:	e7d6      	b.n	80014da <_free_r+0x26>
 800152c:	6825      	ldr	r5, [r4, #0]
 800152e:	1961      	adds	r1, r4, r5
 8001530:	428b      	cmp	r3, r1
 8001532:	bf04      	itt	eq
 8001534:	6819      	ldreq	r1, [r3, #0]
 8001536:	685b      	ldreq	r3, [r3, #4]
 8001538:	6063      	str	r3, [r4, #4]
 800153a:	bf04      	itt	eq
 800153c:	1949      	addeq	r1, r1, r5
 800153e:	6021      	streq	r1, [r4, #0]
 8001540:	6054      	str	r4, [r2, #4]
 8001542:	e7ca      	b.n	80014da <_free_r+0x26>
 8001544:	b003      	add	sp, #12
 8001546:	bd30      	pop	{r4, r5, pc}
 8001548:	20000088 	.word	0x20000088

0800154c <_read_r>:
 800154c:	b538      	push	{r3, r4, r5, lr}
 800154e:	4d07      	ldr	r5, [pc, #28]	; (800156c <_read_r+0x20>)
 8001550:	4604      	mov	r4, r0
 8001552:	4608      	mov	r0, r1
 8001554:	4611      	mov	r1, r2
 8001556:	2200      	movs	r2, #0
 8001558:	602a      	str	r2, [r5, #0]
 800155a:	461a      	mov	r2, r3
 800155c:	f7fe ff9d 	bl	800049a <_read>
 8001560:	1c43      	adds	r3, r0, #1
 8001562:	d102      	bne.n	800156a <_read_r+0x1e>
 8001564:	682b      	ldr	r3, [r5, #0]
 8001566:	b103      	cbz	r3, 800156a <_read_r+0x1e>
 8001568:	6023      	str	r3, [r4, #0]
 800156a:	bd38      	pop	{r3, r4, r5, pc}
 800156c:	20000090 	.word	0x20000090

08001570 <_fstat_r>:
 8001570:	b538      	push	{r3, r4, r5, lr}
 8001572:	4d07      	ldr	r5, [pc, #28]	; (8001590 <_fstat_r+0x20>)
 8001574:	2300      	movs	r3, #0
 8001576:	4604      	mov	r4, r0
 8001578:	4608      	mov	r0, r1
 800157a:	4611      	mov	r1, r2
 800157c:	602b      	str	r3, [r5, #0]
 800157e:	f7fe ffd1 	bl	8000524 <_fstat>
 8001582:	1c43      	adds	r3, r0, #1
 8001584:	d102      	bne.n	800158c <_fstat_r+0x1c>
 8001586:	682b      	ldr	r3, [r5, #0]
 8001588:	b103      	cbz	r3, 800158c <_fstat_r+0x1c>
 800158a:	6023      	str	r3, [r4, #0]
 800158c:	bd38      	pop	{r3, r4, r5, pc}
 800158e:	bf00      	nop
 8001590:	20000090 	.word	0x20000090

08001594 <_isatty_r>:
 8001594:	b538      	push	{r3, r4, r5, lr}
 8001596:	4d06      	ldr	r5, [pc, #24]	; (80015b0 <_isatty_r+0x1c>)
 8001598:	2300      	movs	r3, #0
 800159a:	4604      	mov	r4, r0
 800159c:	4608      	mov	r0, r1
 800159e:	602b      	str	r3, [r5, #0]
 80015a0:	f7fe ffd0 	bl	8000544 <_isatty>
 80015a4:	1c43      	adds	r3, r0, #1
 80015a6:	d102      	bne.n	80015ae <_isatty_r+0x1a>
 80015a8:	682b      	ldr	r3, [r5, #0]
 80015aa:	b103      	cbz	r3, 80015ae <_isatty_r+0x1a>
 80015ac:	6023      	str	r3, [r4, #0]
 80015ae:	bd38      	pop	{r3, r4, r5, pc}
 80015b0:	20000090 	.word	0x20000090

080015b4 <_init>:
 80015b4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80015b6:	bf00      	nop
 80015b8:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80015ba:	bc08      	pop	{r3}
 80015bc:	469e      	mov	lr, r3
 80015be:	4770      	bx	lr

080015c0 <_fini>:
 80015c0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80015c2:	bf00      	nop
 80015c4:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80015c6:	bc08      	pop	{r3}
 80015c8:	469e      	mov	lr, r3
 80015ca:	4770      	bx	lr
